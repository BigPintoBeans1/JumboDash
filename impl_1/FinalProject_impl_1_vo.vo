
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui FinalProject_impl_1.udb 
// Netlist created on Fri Dec  1 18:03:23 2023
// Netlist written on Fri Dec  1 18:03:31 2023
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( controllerIn, fpga_clk, ledController, controlClk, controlLatch, 
             rgb, VSYNC, HSYNC );
  input  controllerIn, fpga_clk;
  output [7:0] ledController;
  output controlClk, controlLatch;
  output [5:0] rgb;
  output VSYNC, HSYNC;
  wire   \vga_1.row_9__N_2[9] , \vga_1.n5440 , \vga_1.n3498 , \row[9] , 
         \vga_1.row_0__N_30 , \vga_1.row_0__N_31 , vga_clk, 
         \vga_1.row_9__N_2[8] , \vga_1.row_9__N_2[7] , \vga_1.n5437 , \row[8] , 
         \vga_1.n3496 , \row[7] , \vga_1.row_9__N_2[6] , \vga_1.row_9__N_2[5] , 
         \vga_1.n5434 , \row[6] , \vga_1.n3494 , \row[5] , 
         \vga_1.row_9__N_2[4] , \vga_1.row_9__N_2[3] , \vga_1.n5431 , \row[4] , 
         \vga_1.n3492 , \row[3] , \vga_1.row_9__N_2[2] , \vga_1.row_9__N_2[1] , 
         \vga_1.n5428 , \row[2] , \vga_1.n3490 , \row[1] , 
         \vga_1.row_9__N_2[0] , \vga_1.n5425 , \ledController_pad[0].vcc , 
         \row[0] , \vga_1.col_9__N_32[9] , \vga_1.n5533 , \vga_1.n3448 , 
         \col[9] , \vga_1.col_0__N_51 , \vga_1.col_9__N_32[8] , 
         \vga_1.col_9__N_32[7] , \vga_1.n5530 , \col[8] , \vga_1.n3446 , 
         \col[7] , \vga_1.col_9__N_32[6] , \vga_1.col_9__N_32[5] , 
         \vga_1.n5527 , \col[6] , \vga_1.n3444 , \col[5] , 
         \vga_1.col_9__N_32[4] , \vga_1.col_9__N_32[3] , \vga_1.n5524 , 
         \vga_1.col[4] , \vga_1.n3442 , \vga_1.col[3] , \vga_1.col_9__N_32[2] , 
         \vga_1.col_9__N_32[1] , \vga_1.n5383 , \vga_1.col[2] , \vga_1.n3440 , 
         \vga_1.col[1] , \vga_1.col_9__N_32[0] , \vga_1.n5380 , \vga_1.col[0] , 
         \jump1.slowClk_N_132[6] , \jump1.slowClk_N_132[5] , \jump1.n5500 , 
         \jump1.n14 , \jump1.n3473 , \jump1.n15 , \jump1.n3475 , 
         \jump1.slowClk_N_132[4] , \jump1.slowClk_N_132[3] , \jump1.n5497 , 
         \jump1.n16_adj_149 , \jump1.n3471 , \jump1.n17 , 
         \jump1.slowClk_N_132[2] , \jump1.slowClk_N_132[1] , \jump1.n5494 , 
         \jump1.n18_adj_155 , \jump1.n3469 , \jump1.n19_adj_156 , 
         \jump1.slowClk_N_132[0] , \jump1.n5401 , \jump1.n20 , 
         \jump1.cube_bot_9__N_53[10] , \jump1.n5422 , \jump1.n3527 , 
         \jump1.n381 , \cube_bot[9] , \jump1.cube_bot_4__N_63 , 
         \jump1.slowClk , \jump1.cube_bot_9__N_53[9] , 
         \jump1.cube_bot_9__N_53[8] , \jump1.n5419 , \cube_bot[8] , 
         \jump1.n3525 , \cube_bot[7] , \jump1.cube_bot_9__N_53[6] , 
         \jump1.n5416 , \cube_bot[6] , \jump1.n3523 , \cube_bot[5] , 
         \jump1.cube_bot_9__N_53[7] , \jump1.slowClk_N_132[19] , \jump1.n5521 , 
         \jump1.n3487 , \jump1.cube_bot_9__N_53[5] , \jump1.n5413 , 
         \cube_bot[4] , \jump1.n3521 , \cube_bot[3] , 
         \jump1.cube_bot_9__N_53[4] , \jump1.slowClk_N_132[18] , 
         \jump1.slowClk_N_132[17] , \jump1.n5518 , \jump1.n2 , \jump1.n3485 , 
         \jump1.n3 , \jump1.n5410 , \cube_bot[2] , \jump1.n3519 , 
         \cube_bot[1] , \jump1.cube_bot_9__N_53[2] , 
         \jump1.cube_bot_9__N_53[3] , \jump1.n5404 , \jump1.n67 , 
         \cube_bot[0] , \jump1.cube_bot_9__N_53[1] , \jump1.slowClk_N_132[16] , 
         \jump1.slowClk_N_132[15] , \jump1.n5515 , \jump1.n4_adj_150 , 
         \jump1.n3483 , \jump1.n5 , \jump1.slowClk_N_132[14] , 
         \jump1.slowClk_N_132[13] , \jump1.n5512 , \jump1.n6_adj_151 , 
         \jump1.n3481 , \jump1.n7 , \jump1.slowClk_N_132[12] , 
         \jump1.slowClk_N_132[11] , \jump1.n5509 , \jump1.n8_adj_152 , 
         \jump1.n3479 , \jump1.n9 , \jump1.slowClk_N_132[10] , 
         \jump1.slowClk_N_132[9] , \jump1.n5506 , \jump1.n10_adj_153 , 
         \jump1.n3477 , \jump1.n11 , \jump1.slowClk_N_132[8] , 
         \jump1.slowClk_N_132[7] , \jump1.n5503 , \jump1.n12_adj_154 , 
         \jump1.n13 , \cube_gen1.n5470 , \cube_gen1.cube_top[2] , 
         \cube_gen1.cube_top_3__N_102 , \cube_gen1.n5488 , \cube_gen1.n1_2[9] , 
         \cube_gen1.n3516 , \cube_gen1.n1_2[8] , \cube_gen1.rgb_c_5_N_124 , 
         \cube_gen1.n5482 , \cube_gen1.n1_2[7] , \cube_gen1.n3514 , 
         \cube_gen1.n1_2[6] , \cube_gen1.n5476 , \cube_gen1.n1_2[5] , 
         \cube_gen1.n3512 , \cube_gen1.n1_2[4] , \cube_gen1.n5467 , 
         \cube_gen1.n1_2[3] , \cube_gen1.n3510 , \cube_gen1.n1_2[2] , 
         \cube_gen1.n5464 , n6, n1, \cube_gen1.n5491 , 
         \cube_gen1.cube_top_9__N_78 , \cube_gen1.cube_top[9] , 
         \cube_gen1.n5485 , \cube_gen1.cube_top_7__N_86 , 
         \cube_gen1.cube_top[7] , \cube_gen1.cube_top[8] , \cube_gen1.n5479 , 
         \cube_gen1.cube_top_5__N_94 , \cube_gen1.cube_top[5] , 
         \cube_gen1.cube_top[6] , \cube_gen1.n5473 , \cube_gen1.cube_top[3] , 
         \cube_gen1.cube_top[4] , \controller1.count_8__N_1[6] , 
         \controller1.count_8__N_1[5] , \controller1.n5374 , \controller1.n11 , 
         \controller1.n3455 , \controller1.n12 , \controller1.clk , 
         \controller1.n3457 , \controller1.count_8__N_1[4] , 
         \controller1.count_8__N_1[3] , \controller1.n5371 , \controller1.n13 , 
         \controller1.n3453 , \controller1.n14 , \controller1.count_8__N_1[2] , 
         \controller1.count_8__N_1[1] , \controller1.n5368 , \controller1.n15 , 
         \controller1.n3451 , \controller1.n16 , \controller1.count_8__N_1[0] , 
         \controller1.n5365 , \controller1.n17 , 
         \controller1.count_8__N_1[16] , \controller1.count_8__N_1[15] , 
         \controller1.n5398 , \controller1.slowCount[7] , \controller1.n3465 , 
         \controller1.slowCount[6] , \controller1.count_8__N_1[14] , 
         \controller1.count_8__N_1[13] , \controller1.n5395 , 
         \controller1.slowCount[5] , \controller1.n3463 , 
         \controller1.slowCount[4] , \controller1.count_8__N_1[12] , 
         \controller1.count_8__N_1[11] , \controller1.n5392 , 
         \controller1.slowCount[3] , \controller1.n3461 , 
         \controller1.slowCount[2] , \controller1.count_8__N_1[10] , 
         \controller1.count_8__N_1[9] , \controller1.n5389 , 
         \controller1.slowCount[1] , \controller1.n3459 , 
         \controller1.slowCount[0] , \controller1.count_8__N_1[8] , 
         \controller1.count_8__N_1[7] , \controller1.n5377 , 
         \controller1.count[8] , \controller1.n10 , 
         \jump1.cube_bot_6__N_59[1] , \jump1.cube_bot_6__N_59[0] , n318, 
         \jump1.n306 , \jump1.cube_bot_6__N_59[3] , 
         \jump1.cube_bot_6__N_59[2] , \cube_bot[0].sig_006.FeedThruLUT , 
         \cube_bot[1].sig_000.FeedThruLUT , \jump1.lastPosition_0__N_118 , 
         \jump1.lastPosition[1] , \jump1.lastPosition[0] , 
         \jump1.lastPosition_6__N_109[3] , \jump1.lastPosition_6__N_109[2] , 
         \jump1.n80 , \jump1.n19 , \jump1.lastPosition_2__N_116 , 
         \jump1.lastPosition[2] , \jump1.lastPosition[3] , 
         \cube_bot[5].sig_002.FeedThruLUT , \cube_bot[4].sig_001.FeedThruLUT , 
         \jump1.lastPosition[4] , \jump1.lastPosition[5] , 
         \jump1.lastPosition_6__N_109[6] , \jump1.lastPosition[6] , 
         \cube_bot[8].sig_004.FeedThruLUT , \cube_bot[7].sig_003.FeedThruLUT , 
         \jump1.lastPosition[7] , \jump1.lastPosition[8] , 
         \cube_bot[9].sig_005.FeedThruLUT , \jump1.lastPosition[9] , 
         \controller1.intermediate[0].sig_014.FeedThruLUT , 
         \controller1.intermediate_0__N_52 , \controller1.intermediate[0] , 
         controllerIn_c, controlClk_c, \controller1.intermediate[1] , 
         \controller1.intermediate[5].sig_009.FeedThruLUT , 
         \controller1.intermediate[6].sig_008.FeedThruLUT , 
         \controller1.intermediate[5] , \controller1.intermediate[6] , 
         \controller1.intermediate[7] , 
         \controller1.intermediate[3].sig_011.FeedThruLUT , 
         \controller1.intermediate[4].sig_010.FeedThruLUT , 
         \controller1.intermediate[3] , \controller1.intermediate[4] , 
         \controller1.intermediate[1].sig_013.FeedThruLUT , 
         \controller1.intermediate[2].sig_012.FeedThruLUT , 
         \controller1.intermediate[2] , \vga_1.n39 , \vga_1.n4426 , 
         \vga_1.HSYNC_c_N_119 , \vga_1.n4607 , HSYNC_c, \vga_1.VSYNC_c_N_120 , 
         n2186, rgb_c_5_N_123, \cube_gen1.rgb_c_5_N_124.sig_007.FeedThruLUT , 
         \cube_gen1.rgb_c_5_N_125 , rgb_c_5, n4193, \cube_gen1.rgb_c_3_N_126 , 
         \jump1.n4418 , \jump1.n65 , n1318, \jump1.n2078 , \jump1.n18 , 
         \jump1.n60 , \jump1.n3927 , \jump1.n4400 , ledController_c_7, n1299, 
         \jump1.n2094 , \jump1.n335 , controlLatch_c, \cube_gen1.n37 , 
         \cube_gen1.n23 , \cube_gen1.rgb_c_3_N_127 , \vga_1.VSYNC_c_N_121 , 
         \vga_1.VSYNC_c_N_122 , VSYNC_c, \cube_gen1.rgb_c_3_N_128 , \vga_1.n8 , 
         rgb_c_3, \vga_1.n7 , n2166, \vga_1.n10_c , \vga_1.n14 , \vga_1.n43 , 
         n3912, \cube_gen1.n4428 , n10, \cube_gen1.n1309 , \cube_gen1.n6_c , 
         \jump1.n1274 , \jump1.n12 , \jump1.n10 , \jump1.n14_adj_148 , 
         \jump1.n12_adj_140 , \jump1.n10_adj_139 , \jump1.n14_adj_147 , 
         \jump1.n10_adj_141 , \jump1.n8 , \jump1.n6_adj_143 , 
         \jump1.n8_adj_142 , \jump1.n6_c , \jump1.n4 , 
         \jump1.cube_bot_6__N_59[6] , \jump1.n4_adj_144 , \jump1.n18_adj_145 , 
         \jump1.n3880 , n2092, \jump1.n44 , \jump1.n16 , \jump1.n16_adj_146 , 
         \jump1.n4_adj_160 , \jump1.n11_adj_157 , \jump1.n6_adj_158 , n1311, 
         \jump1.n49 , \cube_gen1.n4 , \cube_gen1.n6_adj_136 , 
         \cube_gen1.n8_adj_137 , \cube_gen1.n10_c , \cube_gen1.n12 , 
         \cube_gen1.n14 , \cube_gen1.n16 , \cube_gen1.n18 , \cube_gen1.n17 , 
         \controller1.controlLatch_c_N_129 , \controller1.controlClk_c_N_131 , 
         GND_net, ledController_c_0, ledController_c_2, ledController_c_1, 
         ledController_c_4, ledController_c_3, ledController_c_6, 
         ledController_c_5, fpga_clk_c, \mypll_1.lscc_pll_inst.feedback_w ;

  vga_1_SLICE_0 \vga_1.SLICE_0 ( .DI0(\vga_1.row_9__N_2[9] ), 
    .D1(\vga_1.n5440 ), .D0(\vga_1.n3498 ), .B0(\row[9] ), 
    .CE(\vga_1.row_0__N_30 ), .LSR(\vga_1.row_0__N_31 ), .CLK(vga_clk), 
    .CIN0(\vga_1.n3498 ), .CIN1(\vga_1.n5440 ), .Q0(\row[9] ), 
    .F0(\vga_1.row_9__N_2[9] ), .COUT0(\vga_1.n5440 ));
  vga_1_SLICE_1 \vga_1.SLICE_1 ( .DI1(\vga_1.row_9__N_2[8] ), 
    .DI0(\vga_1.row_9__N_2[7] ), .D1(\vga_1.n5437 ), .B1(\row[8] ), 
    .D0(\vga_1.n3496 ), .B0(\row[7] ), .CE(\vga_1.row_0__N_30 ), 
    .LSR(\vga_1.row_0__N_31 ), .CLK(vga_clk), .CIN0(\vga_1.n3496 ), 
    .CIN1(\vga_1.n5437 ), .Q0(\row[7] ), .Q1(\row[8] ), 
    .F0(\vga_1.row_9__N_2[7] ), .F1(\vga_1.row_9__N_2[8] ), 
    .COUT1(\vga_1.n3498 ), .COUT0(\vga_1.n5437 ));
  vga_1_SLICE_2 \vga_1.SLICE_2 ( .DI1(\vga_1.row_9__N_2[6] ), 
    .DI0(\vga_1.row_9__N_2[5] ), .D1(\vga_1.n5434 ), .B1(\row[6] ), 
    .D0(\vga_1.n3494 ), .B0(\row[5] ), .CE(\vga_1.row_0__N_30 ), 
    .LSR(\vga_1.row_0__N_31 ), .CLK(vga_clk), .CIN0(\vga_1.n3494 ), 
    .CIN1(\vga_1.n5434 ), .Q0(\row[5] ), .Q1(\row[6] ), 
    .F0(\vga_1.row_9__N_2[5] ), .F1(\vga_1.row_9__N_2[6] ), 
    .COUT1(\vga_1.n3496 ), .COUT0(\vga_1.n5434 ));
  vga_1_SLICE_3 \vga_1.SLICE_3 ( .DI1(\vga_1.row_9__N_2[4] ), 
    .DI0(\vga_1.row_9__N_2[3] ), .D1(\vga_1.n5431 ), .B1(\row[4] ), 
    .D0(\vga_1.n3492 ), .B0(\row[3] ), .CE(\vga_1.row_0__N_30 ), 
    .LSR(\vga_1.row_0__N_31 ), .CLK(vga_clk), .CIN0(\vga_1.n3492 ), 
    .CIN1(\vga_1.n5431 ), .Q0(\row[3] ), .Q1(\row[4] ), 
    .F0(\vga_1.row_9__N_2[3] ), .F1(\vga_1.row_9__N_2[4] ), 
    .COUT1(\vga_1.n3494 ), .COUT0(\vga_1.n5431 ));
  vga_1_SLICE_4 \vga_1.SLICE_4 ( .DI1(\vga_1.row_9__N_2[2] ), 
    .DI0(\vga_1.row_9__N_2[1] ), .D1(\vga_1.n5428 ), .B1(\row[2] ), 
    .D0(\vga_1.n3490 ), .B0(\row[1] ), .CE(\vga_1.row_0__N_30 ), 
    .LSR(\vga_1.row_0__N_31 ), .CLK(vga_clk), .CIN0(\vga_1.n3490 ), 
    .CIN1(\vga_1.n5428 ), .Q0(\row[1] ), .Q1(\row[2] ), 
    .F0(\vga_1.row_9__N_2[1] ), .F1(\vga_1.row_9__N_2[2] ), 
    .COUT1(\vga_1.n3492 ), .COUT0(\vga_1.n5428 ));
  vga_1_SLICE_5 \vga_1.SLICE_5 ( .DI1(\vga_1.row_9__N_2[0] ), 
    .D1(\vga_1.n5425 ), .C1(\ledController_pad[0].vcc ), .B1(\row[0] ), 
    .CE(\vga_1.row_0__N_30 ), .LSR(\vga_1.row_0__N_31 ), .CLK(vga_clk), 
    .CIN1(\vga_1.n5425 ), .Q1(\row[0] ), .F1(\vga_1.row_9__N_2[0] ), 
    .COUT1(\vga_1.n3490 ), .COUT0(\vga_1.n5425 ));
  vga_1_SLICE_6 \vga_1.SLICE_6 ( .DI0(\vga_1.col_9__N_32[9] ), 
    .D1(\vga_1.n5533 ), .D0(\vga_1.n3448 ), .C0(\col[9] ), 
    .LSR(\vga_1.col_0__N_51 ), .CLK(vga_clk), .CIN0(\vga_1.n3448 ), 
    .CIN1(\vga_1.n5533 ), .Q0(\col[9] ), .F0(\vga_1.col_9__N_32[9] ), 
    .COUT0(\vga_1.n5533 ));
  vga_1_SLICE_7 \vga_1.SLICE_7 ( .DI1(\vga_1.col_9__N_32[8] ), 
    .DI0(\vga_1.col_9__N_32[7] ), .D1(\vga_1.n5530 ), .C1(\col[8] ), 
    .D0(\vga_1.n3446 ), .C0(\col[7] ), .LSR(\vga_1.col_0__N_51 ), 
    .CLK(vga_clk), .CIN0(\vga_1.n3446 ), .CIN1(\vga_1.n5530 ), .Q0(\col[7] ), 
    .Q1(\col[8] ), .F0(\vga_1.col_9__N_32[7] ), .F1(\vga_1.col_9__N_32[8] ), 
    .COUT1(\vga_1.n3448 ), .COUT0(\vga_1.n5530 ));
  vga_1_SLICE_8 \vga_1.SLICE_8 ( .DI1(\vga_1.col_9__N_32[6] ), 
    .DI0(\vga_1.col_9__N_32[5] ), .D1(\vga_1.n5527 ), .C1(\col[6] ), 
    .D0(\vga_1.n3444 ), .C0(\col[5] ), .LSR(\vga_1.col_0__N_51 ), 
    .CLK(vga_clk), .CIN0(\vga_1.n3444 ), .CIN1(\vga_1.n5527 ), .Q0(\col[5] ), 
    .Q1(\col[6] ), .F0(\vga_1.col_9__N_32[5] ), .F1(\vga_1.col_9__N_32[6] ), 
    .COUT1(\vga_1.n3446 ), .COUT0(\vga_1.n5527 ));
  vga_1_SLICE_9 \vga_1.SLICE_9 ( .DI1(\vga_1.col_9__N_32[4] ), 
    .DI0(\vga_1.col_9__N_32[3] ), .D1(\vga_1.n5524 ), .C1(\vga_1.col[4] ), 
    .D0(\vga_1.n3442 ), .C0(\vga_1.col[3] ), .LSR(\vga_1.col_0__N_51 ), 
    .CLK(vga_clk), .CIN0(\vga_1.n3442 ), .CIN1(\vga_1.n5524 ), 
    .Q0(\vga_1.col[3] ), .Q1(\vga_1.col[4] ), .F0(\vga_1.col_9__N_32[3] ), 
    .F1(\vga_1.col_9__N_32[4] ), .COUT1(\vga_1.n3444 ), .COUT0(\vga_1.n5524 ));
  vga_1_SLICE_10 \vga_1.SLICE_10 ( .DI1(\vga_1.col_9__N_32[2] ), 
    .DI0(\vga_1.col_9__N_32[1] ), .D1(\vga_1.n5383 ), .C1(\vga_1.col[2] ), 
    .D0(\vga_1.n3440 ), .C0(\vga_1.col[1] ), .LSR(\vga_1.col_0__N_51 ), 
    .CLK(vga_clk), .CIN0(\vga_1.n3440 ), .CIN1(\vga_1.n5383 ), 
    .Q0(\vga_1.col[1] ), .Q1(\vga_1.col[2] ), .F0(\vga_1.col_9__N_32[1] ), 
    .F1(\vga_1.col_9__N_32[2] ), .COUT1(\vga_1.n3442 ), .COUT0(\vga_1.n5383 ));
  vga_1_SLICE_11 \vga_1.SLICE_11 ( .DI1(\vga_1.col_9__N_32[0] ), 
    .D1(\vga_1.n5380 ), .C1(\vga_1.col[0] ), .B1(\ledController_pad[0].vcc ), 
    .LSR(\vga_1.col_0__N_51 ), .CLK(vga_clk), .CIN1(\vga_1.n5380 ), 
    .Q1(\vga_1.col[0] ), .F1(\vga_1.col_9__N_32[0] ), .COUT1(\vga_1.n3440 ), 
    .COUT0(\vga_1.n5380 ));
  jump1_SLICE_12 \jump1.SLICE_12 ( .DI1(\jump1.slowClk_N_132[6] ), 
    .DI0(\jump1.slowClk_N_132[5] ), .D1(\jump1.n5500 ), .C1(\jump1.n14 ), 
    .D0(\jump1.n3473 ), .C0(\jump1.n15 ), .CLK(vga_clk), .CIN0(\jump1.n3473 ), 
    .CIN1(\jump1.n5500 ), .Q0(\jump1.n15 ), .Q1(\jump1.n14 ), 
    .F0(\jump1.slowClk_N_132[5] ), .F1(\jump1.slowClk_N_132[6] ), 
    .COUT1(\jump1.n3475 ), .COUT0(\jump1.n5500 ));
  jump1_SLICE_13 \jump1.SLICE_13 ( .DI1(\jump1.slowClk_N_132[4] ), 
    .DI0(\jump1.slowClk_N_132[3] ), .D1(\jump1.n5497 ), 
    .C1(\jump1.n16_adj_149 ), .D0(\jump1.n3471 ), .C0(\jump1.n17 ), 
    .CLK(vga_clk), .CIN0(\jump1.n3471 ), .CIN1(\jump1.n5497 ), 
    .Q0(\jump1.n17 ), .Q1(\jump1.n16_adj_149 ), .F0(\jump1.slowClk_N_132[3] ), 
    .F1(\jump1.slowClk_N_132[4] ), .COUT1(\jump1.n3473 ), 
    .COUT0(\jump1.n5497 ));
  jump1_SLICE_14 \jump1.SLICE_14 ( .DI1(\jump1.slowClk_N_132[2] ), 
    .DI0(\jump1.slowClk_N_132[1] ), .D1(\jump1.n5494 ), 
    .C1(\jump1.n18_adj_155 ), .D0(\jump1.n3469 ), .C0(\jump1.n19_adj_156 ), 
    .CLK(vga_clk), .CIN0(\jump1.n3469 ), .CIN1(\jump1.n5494 ), 
    .Q0(\jump1.n19_adj_156 ), .Q1(\jump1.n18_adj_155 ), 
    .F0(\jump1.slowClk_N_132[1] ), .F1(\jump1.slowClk_N_132[2] ), 
    .COUT1(\jump1.n3471 ), .COUT0(\jump1.n5494 ));
  jump1_SLICE_15 \jump1.SLICE_15 ( .DI1(\jump1.slowClk_N_132[0] ), 
    .D1(\jump1.n5401 ), .C1(\jump1.n20 ), .B1(\ledController_pad[0].vcc ), 
    .CLK(vga_clk), .CIN1(\jump1.n5401 ), .Q1(\jump1.n20 ), 
    .F1(\jump1.slowClk_N_132[0] ), .COUT1(\jump1.n3469 ), 
    .COUT0(\jump1.n5401 ));
  jump1_SLICE_16 \jump1.SLICE_16 ( .DI0(\jump1.cube_bot_9__N_53[10] ), 
    .D1(\jump1.n5422 ), .D0(\jump1.n3527 ), .C0(\jump1.n381 ), 
    .B0(\cube_bot[9] ), .LSR(\jump1.cube_bot_4__N_63 ), .CLK(\jump1.slowClk ), 
    .CIN0(\jump1.n3527 ), .CIN1(\jump1.n5422 ), .Q0(\cube_bot[9] ), 
    .F0(\jump1.cube_bot_9__N_53[10] ), .COUT0(\jump1.n5422 ));
  jump1_SLICE_17 \jump1.SLICE_17 ( .DI1(\jump1.cube_bot_9__N_53[9] ), 
    .DI0(\jump1.cube_bot_9__N_53[8] ), .D1(\jump1.n5419 ), .C1(\jump1.n381 ), 
    .B1(\cube_bot[8] ), .D0(\jump1.n3525 ), .C0(\jump1.n381 ), 
    .B0(\cube_bot[7] ), .LSR(\jump1.cube_bot_4__N_63 ), .CLK(\jump1.slowClk ), 
    .CIN0(\jump1.n3525 ), .CIN1(\jump1.n5419 ), .Q0(\cube_bot[7] ), 
    .Q1(\cube_bot[8] ), .F0(\jump1.cube_bot_9__N_53[8] ), 
    .F1(\jump1.cube_bot_9__N_53[9] ), .COUT1(\jump1.n3527 ), 
    .COUT0(\jump1.n5419 ));
  jump1_SLICE_18 \jump1.SLICE_18 ( .DI0(\jump1.cube_bot_9__N_53[6] ), 
    .D1(\jump1.n5416 ), .C1(\jump1.n381 ), .B1(\cube_bot[6] ), 
    .D0(\jump1.n3523 ), .C0(\jump1.n381 ), .B0(\cube_bot[5] ), 
    .LSR(\jump1.cube_bot_4__N_63 ), .CLK(\jump1.slowClk ), 
    .CIN0(\jump1.n3523 ), .CIN1(\jump1.n5416 ), .Q0(\cube_bot[5] ), 
    .F0(\jump1.cube_bot_9__N_53[6] ), .F1(\jump1.cube_bot_9__N_53[7] ), 
    .COUT1(\jump1.n3525 ), .COUT0(\jump1.n5416 ));
  jump1_SLICE_19 \jump1.SLICE_19 ( .DI0(\jump1.slowClk_N_132[19] ), 
    .D1(\jump1.n5521 ), .D0(\jump1.n3487 ), .C0(\jump1.slowClk ), 
    .CLK(vga_clk), .CIN0(\jump1.n3487 ), .CIN1(\jump1.n5521 ), 
    .Q0(\jump1.slowClk ), .F0(\jump1.slowClk_N_132[19] ), 
    .COUT0(\jump1.n5521 ));
  jump1_SLICE_20 \jump1.SLICE_20 ( .DI1(\jump1.cube_bot_9__N_53[5] ), 
    .D1(\jump1.n5413 ), .C1(\jump1.n381 ), .B1(\cube_bot[4] ), 
    .D0(\jump1.n3521 ), .C0(\jump1.n381 ), .B0(\cube_bot[3] ), 
    .LSR(\jump1.cube_bot_4__N_63 ), .CLK(\jump1.slowClk ), 
    .CIN0(\jump1.n3521 ), .CIN1(\jump1.n5413 ), .Q1(\cube_bot[4] ), 
    .F0(\jump1.cube_bot_9__N_53[4] ), .F1(\jump1.cube_bot_9__N_53[5] ), 
    .COUT1(\jump1.n3523 ), .COUT0(\jump1.n5413 ));
  jump1_SLICE_21 \jump1.SLICE_21 ( .DI1(\jump1.slowClk_N_132[18] ), 
    .DI0(\jump1.slowClk_N_132[17] ), .D1(\jump1.n5518 ), .C1(\jump1.n2 ), 
    .D0(\jump1.n3485 ), .C0(\jump1.n3 ), .CLK(vga_clk), .CIN0(\jump1.n3485 ), 
    .CIN1(\jump1.n5518 ), .Q0(\jump1.n3 ), .Q1(\jump1.n2 ), 
    .F0(\jump1.slowClk_N_132[17] ), .F1(\jump1.slowClk_N_132[18] ), 
    .COUT1(\jump1.n3487 ), .COUT0(\jump1.n5518 ));
  jump1_SLICE_22 \jump1.SLICE_22 ( .D1(\jump1.n5410 ), .C1(\jump1.n381 ), 
    .B1(\cube_bot[2] ), .D0(\jump1.n3519 ), .C0(\jump1.n381 ), 
    .B0(\cube_bot[1] ), .CIN0(\jump1.n3519 ), .CIN1(\jump1.n5410 ), 
    .F0(\jump1.cube_bot_9__N_53[2] ), .F1(\jump1.cube_bot_9__N_53[3] ), 
    .COUT1(\jump1.n3521 ), .COUT0(\jump1.n5410 ));
  jump1_SLICE_23 \jump1.SLICE_23 ( .D1(\jump1.n5404 ), .C1(\jump1.n67 ), 
    .B1(\cube_bot[0] ), .B0(\jump1.n381 ), .CIN1(\jump1.n5404 ), 
    .F1(\jump1.cube_bot_9__N_53[1] ), .COUT1(\jump1.n3519 ), 
    .COUT0(\jump1.n5404 ));
  jump1_SLICE_24 \jump1.SLICE_24 ( .DI1(\jump1.slowClk_N_132[16] ), 
    .DI0(\jump1.slowClk_N_132[15] ), .D1(\jump1.n5515 ), 
    .C1(\jump1.n4_adj_150 ), .D0(\jump1.n3483 ), .C0(\jump1.n5 ), 
    .CLK(vga_clk), .CIN0(\jump1.n3483 ), .CIN1(\jump1.n5515 ), .Q0(\jump1.n5 ), 
    .Q1(\jump1.n4_adj_150 ), .F0(\jump1.slowClk_N_132[15] ), 
    .F1(\jump1.slowClk_N_132[16] ), .COUT1(\jump1.n3485 ), 
    .COUT0(\jump1.n5515 ));
  jump1_SLICE_25 \jump1.SLICE_25 ( .DI1(\jump1.slowClk_N_132[14] ), 
    .DI0(\jump1.slowClk_N_132[13] ), .D1(\jump1.n5512 ), 
    .C1(\jump1.n6_adj_151 ), .D0(\jump1.n3481 ), .C0(\jump1.n7 ), 
    .CLK(vga_clk), .CIN0(\jump1.n3481 ), .CIN1(\jump1.n5512 ), .Q0(\jump1.n7 ), 
    .Q1(\jump1.n6_adj_151 ), .F0(\jump1.slowClk_N_132[13] ), 
    .F1(\jump1.slowClk_N_132[14] ), .COUT1(\jump1.n3483 ), 
    .COUT0(\jump1.n5512 ));
  jump1_SLICE_26 \jump1.SLICE_26 ( .DI1(\jump1.slowClk_N_132[12] ), 
    .DI0(\jump1.slowClk_N_132[11] ), .D1(\jump1.n5509 ), 
    .C1(\jump1.n8_adj_152 ), .D0(\jump1.n3479 ), .C0(\jump1.n9 ), 
    .CLK(vga_clk), .CIN0(\jump1.n3479 ), .CIN1(\jump1.n5509 ), .Q0(\jump1.n9 ), 
    .Q1(\jump1.n8_adj_152 ), .F0(\jump1.slowClk_N_132[11] ), 
    .F1(\jump1.slowClk_N_132[12] ), .COUT1(\jump1.n3481 ), 
    .COUT0(\jump1.n5509 ));
  jump1_SLICE_27 \jump1.SLICE_27 ( .DI1(\jump1.slowClk_N_132[10] ), 
    .DI0(\jump1.slowClk_N_132[9] ), .D1(\jump1.n5506 ), 
    .C1(\jump1.n10_adj_153 ), .D0(\jump1.n3477 ), .C0(\jump1.n11 ), 
    .CLK(vga_clk), .CIN0(\jump1.n3477 ), .CIN1(\jump1.n5506 ), 
    .Q0(\jump1.n11 ), .Q1(\jump1.n10_adj_153 ), .F0(\jump1.slowClk_N_132[9] ), 
    .F1(\jump1.slowClk_N_132[10] ), .COUT1(\jump1.n3479 ), 
    .COUT0(\jump1.n5506 ));
  jump1_SLICE_28 \jump1.SLICE_28 ( .DI1(\jump1.slowClk_N_132[8] ), 
    .DI0(\jump1.slowClk_N_132[7] ), .D1(\jump1.n5503 ), 
    .C1(\jump1.n12_adj_154 ), .D0(\jump1.n3475 ), .C0(\jump1.n13 ), 
    .CLK(vga_clk), .CIN0(\jump1.n3475 ), .CIN1(\jump1.n5503 ), 
    .Q0(\jump1.n13 ), .Q1(\jump1.n12_adj_154 ), .F0(\jump1.slowClk_N_132[7] ), 
    .F1(\jump1.slowClk_N_132[8] ), .COUT1(\jump1.n3477 ), 
    .COUT0(\jump1.n5503 ));
  cube_gen1_SLICE_29 \cube_gen1.SLICE_29 ( .D1(\cube_gen1.n5470 ), 
    .C1(\ledController_pad[0].vcc ), .B1(\cube_bot[2] ), 
    .CIN1(\cube_gen1.n5470 ), .F1(\cube_gen1.cube_top[2] ), 
    .COUT1(\cube_gen1.cube_top_3__N_102 ), .COUT0(\cube_gen1.n5470 ));
  cube_gen1_SLICE_30 \cube_gen1.SLICE_30 ( .D1(\cube_gen1.n5488 ), 
    .C1(\cube_gen1.n1_2[9] ), .B1(\row[9] ), .D0(\cube_gen1.n3516 ), 
    .C0(\cube_gen1.n1_2[8] ), .B0(\row[8] ), .CIN0(\cube_gen1.n3516 ), 
    .CIN1(\cube_gen1.n5488 ), .COUT1(\cube_gen1.rgb_c_5_N_124 ), 
    .COUT0(\cube_gen1.n5488 ));
  cube_gen1_SLICE_31 \cube_gen1.SLICE_31 ( .D1(\cube_gen1.n5482 ), 
    .C1(\cube_gen1.n1_2[7] ), .B1(\row[7] ), .D0(\cube_gen1.n3514 ), 
    .C0(\cube_gen1.n1_2[6] ), .B0(\row[6] ), .CIN0(\cube_gen1.n3514 ), 
    .CIN1(\cube_gen1.n5482 ), .COUT1(\cube_gen1.n3516 ), 
    .COUT0(\cube_gen1.n5482 ));
  cube_gen1_SLICE_32 \cube_gen1.SLICE_32 ( .D1(\cube_gen1.n5476 ), 
    .C1(\cube_gen1.n1_2[5] ), .B1(\row[5] ), .D0(\cube_gen1.n3512 ), 
    .C0(\cube_gen1.n1_2[4] ), .B0(\row[4] ), .CIN0(\cube_gen1.n3512 ), 
    .CIN1(\cube_gen1.n5476 ), .COUT1(\cube_gen1.n3514 ), 
    .COUT0(\cube_gen1.n5476 ));
  cube_gen1_SLICE_33 \cube_gen1.SLICE_33 ( .D1(\cube_gen1.n5467 ), 
    .C1(\cube_gen1.n1_2[3] ), .B1(\row[3] ), .D0(\cube_gen1.n3510 ), 
    .C0(\cube_gen1.n1_2[2] ), .B0(\row[2] ), .CIN0(\cube_gen1.n3510 ), 
    .CIN1(\cube_gen1.n5467 ), .COUT1(\cube_gen1.n3512 ), 
    .COUT0(\cube_gen1.n5467 ));
  cube_gen1_SLICE_34 \cube_gen1.SLICE_34 ( .D1(\cube_gen1.n5464 ), .C1(n6), 
    .B1(\row[1] ), .C0(n1), .B0(\row[0] ), .CIN1(\cube_gen1.n5464 ), 
    .COUT1(\cube_gen1.n3510 ), .COUT0(\cube_gen1.n5464 ));
  cube_gen1_SLICE_35 \cube_gen1.SLICE_35 ( .D1(\cube_gen1.n5491 ), 
    .D0(\cube_gen1.cube_top_9__N_78 ), .C0(\ledController_pad[0].vcc ), 
    .B0(\cube_bot[9] ), .CIN0(\cube_gen1.cube_top_9__N_78 ), 
    .CIN1(\cube_gen1.n5491 ), .F0(\cube_gen1.cube_top[9] ), 
    .COUT0(\cube_gen1.n5491 ));
  cube_gen1_SLICE_36 \cube_gen1.SLICE_36 ( .D1(\cube_gen1.n5485 ), 
    .C1(\ledController_pad[0].vcc ), .B1(\cube_bot[8] ), 
    .D0(\cube_gen1.cube_top_7__N_86 ), .C0(\ledController_pad[0].vcc ), 
    .B0(\cube_bot[7] ), .CIN0(\cube_gen1.cube_top_7__N_86 ), 
    .CIN1(\cube_gen1.n5485 ), .F0(\cube_gen1.cube_top[7] ), 
    .F1(\cube_gen1.cube_top[8] ), .COUT1(\cube_gen1.cube_top_9__N_78 ), 
    .COUT0(\cube_gen1.n5485 ));
  cube_gen1_SLICE_37 \cube_gen1.SLICE_37 ( .D1(\cube_gen1.n5479 ), 
    .C1(\ledController_pad[0].vcc ), .B1(\cube_bot[6] ), 
    .D0(\cube_gen1.cube_top_5__N_94 ), .C0(\ledController_pad[0].vcc ), 
    .B0(\cube_bot[5] ), .CIN0(\cube_gen1.cube_top_5__N_94 ), 
    .CIN1(\cube_gen1.n5479 ), .F0(\cube_gen1.cube_top[5] ), 
    .F1(\cube_gen1.cube_top[6] ), .COUT1(\cube_gen1.cube_top_7__N_86 ), 
    .COUT0(\cube_gen1.n5479 ));
  cube_gen1_SLICE_38 \cube_gen1.SLICE_38 ( .D1(\cube_gen1.n5473 ), 
    .B1(\cube_bot[4] ), .D0(\cube_gen1.cube_top_3__N_102 ), 
    .C0(\ledController_pad[0].vcc ), .B0(\cube_bot[3] ), 
    .CIN0(\cube_gen1.cube_top_3__N_102 ), .CIN1(\cube_gen1.n5473 ), 
    .F0(\cube_gen1.cube_top[3] ), .F1(\cube_gen1.cube_top[4] ), 
    .COUT1(\cube_gen1.cube_top_5__N_94 ), .COUT0(\cube_gen1.n5473 ));
  controller1_SLICE_39 \controller1.SLICE_39 ( 
    .DI1(\controller1.count_8__N_1[6] ), .DI0(\controller1.count_8__N_1[5] ), 
    .D1(\controller1.n5374 ), .C1(\controller1.n11 ), .D0(\controller1.n3455 ), 
    .C0(\controller1.n12 ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n3455 ), .CIN1(\controller1.n5374 ), 
    .Q0(\controller1.n12 ), .Q1(\controller1.n11 ), 
    .F0(\controller1.count_8__N_1[5] ), .F1(\controller1.count_8__N_1[6] ), 
    .COUT1(\controller1.n3457 ), .COUT0(\controller1.n5374 ));
  controller1_SLICE_40 \controller1.SLICE_40 ( 
    .DI1(\controller1.count_8__N_1[4] ), .DI0(\controller1.count_8__N_1[3] ), 
    .D1(\controller1.n5371 ), .C1(\controller1.n13 ), .D0(\controller1.n3453 ), 
    .C0(\controller1.n14 ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n3453 ), .CIN1(\controller1.n5371 ), 
    .Q0(\controller1.n14 ), .Q1(\controller1.n13 ), 
    .F0(\controller1.count_8__N_1[3] ), .F1(\controller1.count_8__N_1[4] ), 
    .COUT1(\controller1.n3455 ), .COUT0(\controller1.n5371 ));
  controller1_SLICE_41 \controller1.SLICE_41 ( 
    .DI1(\controller1.count_8__N_1[2] ), .DI0(\controller1.count_8__N_1[1] ), 
    .D1(\controller1.n5368 ), .C1(\controller1.n15 ), .D0(\controller1.n3451 ), 
    .C0(\controller1.n16 ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n3451 ), .CIN1(\controller1.n5368 ), 
    .Q0(\controller1.n16 ), .Q1(\controller1.n15 ), 
    .F0(\controller1.count_8__N_1[1] ), .F1(\controller1.count_8__N_1[2] ), 
    .COUT1(\controller1.n3453 ), .COUT0(\controller1.n5368 ));
  controller1_SLICE_42 \controller1.SLICE_42 ( 
    .DI1(\controller1.count_8__N_1[0] ), .D1(\controller1.n5365 ), 
    .C1(\controller1.n17 ), .B1(\ledController_pad[0].vcc ), 
    .CLK(\controller1.clk ), .CIN1(\controller1.n5365 ), 
    .Q1(\controller1.n17 ), .F1(\controller1.count_8__N_1[0] ), 
    .COUT1(\controller1.n3451 ), .COUT0(\controller1.n5365 ));
  controller1_SLICE_43 \controller1.SLICE_43 ( 
    .DI1(\controller1.count_8__N_1[16] ), .DI0(\controller1.count_8__N_1[15] ), 
    .D1(\controller1.n5398 ), .C1(\controller1.slowCount[7] ), 
    .D0(\controller1.n3465 ), .C0(\controller1.slowCount[6] ), 
    .CLK(\controller1.clk ), .CIN0(\controller1.n3465 ), 
    .CIN1(\controller1.n5398 ), .Q0(\controller1.slowCount[6] ), 
    .Q1(\controller1.slowCount[7] ), .F0(\controller1.count_8__N_1[15] ), 
    .F1(\controller1.count_8__N_1[16] ), .COUT0(\controller1.n5398 ));
  controller1_SLICE_44 \controller1.SLICE_44 ( 
    .DI1(\controller1.count_8__N_1[14] ), .DI0(\controller1.count_8__N_1[13] ), 
    .D1(\controller1.n5395 ), .C1(\controller1.slowCount[5] ), 
    .D0(\controller1.n3463 ), .C0(\controller1.slowCount[4] ), 
    .CLK(\controller1.clk ), .CIN0(\controller1.n3463 ), 
    .CIN1(\controller1.n5395 ), .Q0(\controller1.slowCount[4] ), 
    .Q1(\controller1.slowCount[5] ), .F0(\controller1.count_8__N_1[13] ), 
    .F1(\controller1.count_8__N_1[14] ), .COUT1(\controller1.n3465 ), 
    .COUT0(\controller1.n5395 ));
  controller1_SLICE_45 \controller1.SLICE_45 ( 
    .DI1(\controller1.count_8__N_1[12] ), .DI0(\controller1.count_8__N_1[11] ), 
    .D1(\controller1.n5392 ), .C1(\controller1.slowCount[3] ), 
    .D0(\controller1.n3461 ), .C0(\controller1.slowCount[2] ), 
    .CLK(\controller1.clk ), .CIN0(\controller1.n3461 ), 
    .CIN1(\controller1.n5392 ), .Q0(\controller1.slowCount[2] ), 
    .Q1(\controller1.slowCount[3] ), .F0(\controller1.count_8__N_1[11] ), 
    .F1(\controller1.count_8__N_1[12] ), .COUT1(\controller1.n3463 ), 
    .COUT0(\controller1.n5392 ));
  controller1_SLICE_46 \controller1.SLICE_46 ( 
    .DI1(\controller1.count_8__N_1[10] ), .DI0(\controller1.count_8__N_1[9] ), 
    .D1(\controller1.n5389 ), .C1(\controller1.slowCount[1] ), 
    .D0(\controller1.n3459 ), .C0(\controller1.slowCount[0] ), 
    .CLK(\controller1.clk ), .CIN0(\controller1.n3459 ), 
    .CIN1(\controller1.n5389 ), .Q0(\controller1.slowCount[0] ), 
    .Q1(\controller1.slowCount[1] ), .F0(\controller1.count_8__N_1[9] ), 
    .F1(\controller1.count_8__N_1[10] ), .COUT1(\controller1.n3461 ), 
    .COUT0(\controller1.n5389 ));
  controller1_SLICE_47 \controller1.SLICE_47 ( 
    .DI1(\controller1.count_8__N_1[8] ), .DI0(\controller1.count_8__N_1[7] ), 
    .D1(\controller1.n5377 ), .C1(\controller1.count[8] ), 
    .D0(\controller1.n3457 ), .C0(\controller1.n10 ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n3457 ), .CIN1(\controller1.n5377 ), 
    .Q0(\controller1.n10 ), .Q1(\controller1.count[8] ), 
    .F0(\controller1.count_8__N_1[7] ), .F1(\controller1.count_8__N_1[8] ), 
    .COUT1(\controller1.n3459 ), .COUT0(\controller1.n5377 ));
  jump1_SLICE_48 \jump1.SLICE_48 ( .DI1(\jump1.cube_bot_6__N_59[1] ), 
    .DI0(\jump1.cube_bot_6__N_59[0] ), .D1(\jump1.cube_bot_9__N_53[2] ), 
    .C1(n318), .B1(\jump1.cube_bot_4__N_63 ), .A1(\jump1.n306 ), .D0(n318), 
    .C0(\jump1.cube_bot_9__N_53[1] ), .B0(\jump1.n306 ), 
    .A0(\jump1.cube_bot_4__N_63 ), .CLK(\jump1.slowClk ), .Q0(\cube_bot[0] ), 
    .Q1(\cube_bot[1] ), .F0(\jump1.cube_bot_6__N_59[0] ), 
    .F1(\jump1.cube_bot_6__N_59[1] ));
  jump1_SLICE_50 \jump1.SLICE_50 ( .DI1(\jump1.cube_bot_6__N_59[3] ), 
    .DI0(\jump1.cube_bot_6__N_59[2] ), .D1(\jump1.cube_bot_9__N_53[4] ), 
    .C1(n318), .B1(\jump1.n306 ), .A1(\jump1.cube_bot_4__N_63 ), 
    .D0(\jump1.cube_bot_4__N_63 ), .C0(\jump1.n306 ), .B0(n318), 
    .A0(\jump1.cube_bot_9__N_53[3] ), .CLK(\jump1.slowClk ), 
    .Q0(\cube_bot[2] ), .Q1(\cube_bot[3] ), .F0(\jump1.cube_bot_6__N_59[2] ), 
    .F1(\jump1.cube_bot_6__N_59[3] ));
  SLICE_53 SLICE_53( .DI1(\cube_bot[0].sig_006.FeedThruLUT ), 
    .DI0(\cube_bot[1].sig_000.FeedThruLUT ), .D1(\cube_bot[0] ), 
    .D0(\cube_bot[1] ), .LSR(\jump1.lastPosition_0__N_118 ), 
    .CLK(\jump1.slowClk ), .Q0(\jump1.lastPosition[1] ), 
    .Q1(\jump1.lastPosition[0] ), .F0(\cube_bot[1].sig_000.FeedThruLUT ), 
    .F1(\cube_bot[0].sig_006.FeedThruLUT ));
  jump1_SLICE_54 \jump1.SLICE_54 ( .DI1(\jump1.lastPosition_6__N_109[3] ), 
    .DI0(\jump1.lastPosition_6__N_109[2] ), .D1(\jump1.n80 ), .C1(\jump1.n19 ), 
    .B1(\jump1.n67 ), .A1(\cube_bot[3] ), .D0(\jump1.n19 ), .C0(\jump1.n80 ), 
    .B0(\cube_bot[2] ), .A0(\jump1.n67 ), .LSR(\jump1.lastPosition_2__N_116 ), 
    .CLK(\jump1.slowClk ), .Q0(\jump1.lastPosition[2] ), 
    .Q1(\jump1.lastPosition[3] ), .F0(\jump1.lastPosition_6__N_109[2] ), 
    .F1(\jump1.lastPosition_6__N_109[3] ));
  SLICE_56 SLICE_56( .DI1(\cube_bot[5].sig_002.FeedThruLUT ), 
    .DI0(\cube_bot[4].sig_001.FeedThruLUT ), .D1(\cube_bot[5] ), 
    .C0(\cube_bot[4] ), .LSR(\jump1.lastPosition_0__N_118 ), 
    .CLK(\jump1.slowClk ), .Q0(\jump1.lastPosition[4] ), 
    .Q1(\jump1.lastPosition[5] ), .F0(\cube_bot[4].sig_001.FeedThruLUT ), 
    .F1(\cube_bot[5].sig_002.FeedThruLUT ));
  jump1_SLICE_58 \jump1.SLICE_58 ( .DI0(\jump1.lastPosition_6__N_109[6] ), 
    .D0(\jump1.n19 ), .C0(\jump1.n67 ), .B0(\jump1.n80 ), .A0(\cube_bot[6] ), 
    .LSR(\jump1.lastPosition_2__N_116 ), .CLK(\jump1.slowClk ), 
    .Q0(\jump1.lastPosition[6] ), .F0(\jump1.lastPosition_6__N_109[6] ));
  SLICE_59 SLICE_59( .DI1(\cube_bot[8].sig_004.FeedThruLUT ), 
    .DI0(\cube_bot[7].sig_003.FeedThruLUT ), .D1(\cube_bot[8] ), 
    .D0(\cube_bot[7] ), .LSR(\jump1.lastPosition_0__N_118 ), 
    .CLK(\jump1.slowClk ), .Q0(\jump1.lastPosition[7] ), 
    .Q1(\jump1.lastPosition[8] ), .F0(\cube_bot[7].sig_003.FeedThruLUT ), 
    .F1(\cube_bot[8].sig_004.FeedThruLUT ));
  SLICE_61 SLICE_61( .DI0(\cube_bot[9].sig_005.FeedThruLUT ), 
    .D0(\cube_bot[9] ), .LSR(\jump1.lastPosition_0__N_118 ), 
    .CLK(\jump1.slowClk ), .Q0(\jump1.lastPosition[9] ), 
    .F0(\cube_bot[9].sig_005.FeedThruLUT ));
  controller1_SLICE_63 \controller1.SLICE_63 ( 
    .DI1(\controller1.intermediate[0].sig_014.FeedThruLUT ), 
    .DI0(\controller1.intermediate_0__N_52 ), 
    .D1(\controller1.intermediate[0] ), .D0(controllerIn_c), 
    .CLK(controlClk_c), .Q0(\controller1.intermediate[0] ), 
    .Q1(\controller1.intermediate[1] ), 
    .F0(\controller1.intermediate_0__N_52 ), 
    .F1(\controller1.intermediate[0].sig_014.FeedThruLUT ));
  controller1_SLICE_64 \controller1.SLICE_64 ( 
    .DI1(\controller1.intermediate[5].sig_009.FeedThruLUT ), 
    .DI0(\controller1.intermediate[6].sig_008.FeedThruLUT ), 
    .D1(\controller1.intermediate[5] ), .D0(\controller1.intermediate[6] ), 
    .CLK(controlClk_c), .Q0(\controller1.intermediate[7] ), 
    .Q1(\controller1.intermediate[6] ), 
    .F0(\controller1.intermediate[6].sig_008.FeedThruLUT ), 
    .F1(\controller1.intermediate[5].sig_009.FeedThruLUT ));
  controller1_SLICE_66 \controller1.SLICE_66 ( 
    .DI1(\controller1.intermediate[3].sig_011.FeedThruLUT ), 
    .DI0(\controller1.intermediate[4].sig_010.FeedThruLUT ), 
    .D1(\controller1.intermediate[3] ), .D0(\controller1.intermediate[4] ), 
    .CLK(controlClk_c), .Q0(\controller1.intermediate[5] ), 
    .Q1(\controller1.intermediate[4] ), 
    .F0(\controller1.intermediate[4].sig_010.FeedThruLUT ), 
    .F1(\controller1.intermediate[3].sig_011.FeedThruLUT ));
  controller1_SLICE_68 \controller1.SLICE_68 ( 
    .DI1(\controller1.intermediate[1].sig_013.FeedThruLUT ), 
    .DI0(\controller1.intermediate[2].sig_012.FeedThruLUT ), 
    .D1(\controller1.intermediate[1] ), .D0(\controller1.intermediate[2] ), 
    .CLK(controlClk_c), .Q0(\controller1.intermediate[3] ), 
    .Q1(\controller1.intermediate[2] ), 
    .F0(\controller1.intermediate[2].sig_012.FeedThruLUT ), 
    .F1(\controller1.intermediate[1].sig_013.FeedThruLUT ));
  vga_1_SLICE_71 \vga_1.SLICE_71 ( .D1(\col[7] ), .C1(\vga_1.n39 ), 
    .B1(\col[6] ), .A1(\vga_1.col[4] ), .D0(\vga_1.col[2] ), 
    .C0(\vga_1.col[3] ), .F0(\vga_1.n39 ), .F1(\vga_1.n4426 ));
  vga_1_SLICE_72 \vga_1.SLICE_72 ( .D1(\col[7] ), .C1(\vga_1.HSYNC_c_N_119 ), 
    .B1(\col[8] ), .A1(\col[9] ), .D0(\vga_1.n4607 ), .C0(\vga_1.n4426 ), 
    .B0(\col[5] ), .A0(\col[6] ), .F0(\vga_1.HSYNC_c_N_119 ), .F1(HSYNC_c));
  vga_1_SLICE_73 \vga_1.SLICE_73 ( .D1(\vga_1.VSYNC_c_N_120 ), .C1(n2186), 
    .B1(\col[9] ), .A1(\row[9] ), .D0(\col[7] ), .C0(\col[8] ), .F0(n2186), 
    .F1(rgb_c_5_N_123));
  cube_gen1_SLICE_74 \cube_gen1.SLICE_74 ( 
    .D0(\cube_gen1.rgb_c_5_N_124.sig_007.FeedThruLUT ), .C0(rgb_c_5_N_123), 
    .B0(\cube_gen1.rgb_c_5_N_125 ), .A0(\col[9] ), .F0(rgb_c_5));
  vga_1_SLICE_75 \vga_1.SLICE_75 ( .D1(\row[5] ), .C1(n4193), .B1(\row[9] ), 
    .A1(\row[7] ), .D0(\row[6] ), .C0(\row[8] ), .B0(\row[7] ), .F0(n4193), 
    .F1(\cube_gen1.rgb_c_3_N_126 ));
  jump1_SLICE_77 \jump1.SLICE_77 ( .D1(\cube_bot[8] ), .C1(\jump1.n4418 ), 
    .B1(\jump1.n65 ), .A1(\cube_bot[9] ), .D0(\cube_bot[3] ), .C0(n1318), 
    .B0(\jump1.n2078 ), .A0(\cube_bot[4] ), .F0(\jump1.n4418 ), 
    .F1(\jump1.n67 ));
  jump1_SLICE_78 \jump1.SLICE_78 ( .D1(\cube_bot[8] ), .C1(\jump1.n65 ), 
    .B1(\cube_bot[9] ), .A1(\jump1.n4418 ), .D0(\jump1.lastPosition[9] ), 
    .C0(\jump1.n18 ), .B0(\cube_bot[9] ), .F0(\jump1.n65 ), .F1(\jump1.n381 ));
  jump1_SLICE_79 \jump1.SLICE_79 ( .D1(\jump1.n60 ), .C1(\jump1.n3927 ), 
    .B1(\jump1.n306 ), .A1(\jump1.n4400 ), .D0(ledController_c_7), .C0(n1299), 
    .B0(\jump1.n2094 ), .A0(\jump1.n335 ), .F0(\jump1.n3927 ), 
    .F1(\jump1.cube_bot_4__N_63 ));
  controller1_SLICE_80 \controller1.SLICE_80 ( 
    .D1(\jump1.lastPosition_2__N_116 ), .C1(ledController_c_7), 
    .D0(\controller1.intermediate[7] ), .C0(controlLatch_c), 
    .B0(ledController_c_7), .F0(ledController_c_7), .F1(\jump1.n60 ));
  cube_gen1_SLICE_81 \cube_gen1.SLICE_81 ( .D1(\cube_gen1.n37 ), 
    .C1(\cube_gen1.n23 ), .B1(\row[3] ), .A1(\row[4] ), .D0(\row[2] ), 
    .C0(\row[3] ), .B0(\row[0] ), .F0(\cube_gen1.n23 ), 
    .F1(\cube_gen1.rgb_c_3_N_127 ));
  vga_1_SLICE_83 \vga_1.SLICE_83 ( .C0(\row[4] ), .A0(\row[3] ), 
    .F0(\vga_1.VSYNC_c_N_121 ));
  vga_1_SLICE_84 \vga_1.SLICE_84 ( .D1(\vga_1.VSYNC_c_N_122 ), 
    .C1(\vga_1.VSYNC_c_N_120 ), .B1(\vga_1.VSYNC_c_N_121 ), .A1(\row[9] ), 
    .D0(\row[6] ), .C0(\row[5] ), .B0(\row[7] ), .A0(\row[8] ), 
    .F0(\vga_1.VSYNC_c_N_120 ), .F1(VSYNC_c));
  vga_1_SLICE_85 \vga_1.SLICE_85 ( .D1(\row[6] ), 
    .C1(\cube_gen1.rgb_c_3_N_127 ), .B1(\cube_gen1.rgb_c_3_N_128 ), 
    .A1(\cube_gen1.rgb_c_3_N_126 ), .D0(\row[2] ), .C0(\row[6] ), 
    .A0(\row[5] ), .F0(\vga_1.n8 ), .F1(rgb_c_3));
  vga_1_SLICE_86 \vga_1.SLICE_86 ( .D1(\vga_1.n7 ), .C1(n2166), 
    .B1(\vga_1.n8 ), .A1(\vga_1.VSYNC_c_N_121 ), .D0(\row[1] ), .C0(\row[0] ), 
    .F0(n2166), .F1(\vga_1.row_0__N_31 ));
  vga_1_SLICE_87 \vga_1.SLICE_87 ( .C1(\vga_1.col_0__N_51 ), 
    .A1(\vga_1.row_0__N_31 ), .D0(\vga_1.n10_c ), .C0(\vga_1.n14 ), 
    .B0(\col[7] ), .A0(\vga_1.col[3] ), .F0(\vga_1.col_0__N_51 ), 
    .F1(\vga_1.row_0__N_30 ));
  vga_1_SLICE_89 \vga_1.SLICE_89 ( .D1(\vga_1.col[4] ), .C1(\vga_1.n43 ), 
    .B1(\col[8] ), .A1(\col[9] ), .D0(\vga_1.col[1] ), .C0(\vga_1.col[2] ), 
    .F0(\vga_1.n43 ), .F1(\vga_1.n14 ));
  vga_1_SLICE_91 \vga_1.SLICE_91 ( .D1(\col[5] ), .C1(n3912), .B1(\col[7] ), 
    .A1(\col[6] ), .D0(\vga_1.col[1] ), .C0(\vga_1.col[2] ), 
    .B0(\vga_1.col[3] ), .A0(\vga_1.col[4] ), .F0(n3912), 
    .F1(\cube_gen1.n4428 ));
  vga_1_SLICE_94 \vga_1.SLICE_94 ( .D1(\col[6] ), .C1(n10), .B1(\col[7] ), 
    .A1(\col[5] ), .D0(\vga_1.n39 ), .C0(\vga_1.col[1] ), .B0(\vga_1.col[0] ), 
    .A0(\vga_1.col[4] ), .F0(n10), .F1(\cube_gen1.n1309 ));
  cube_gen1_SLICE_96 \cube_gen1.SLICE_96 ( .D1(\cube_gen1.rgb_c_5_N_125 ), 
    .C1(\cube_gen1.n6_c ), .B1(n2186), .A1(\col[9] ), 
    .D0(\cube_gen1.rgb_c_5_N_124.sig_007.FeedThruLUT ), .B0(\row[8] ), 
    .F0(\cube_gen1.n6_c ), .F1(\cube_gen1.rgb_c_3_N_128 ));
  jump1_SLICE_97 \jump1.SLICE_97 ( .D1(\cube_bot[1] ), .D0(\cube_bot[2] ), 
    .C0(\cube_bot[1] ), .F0(\jump1.n2078 ), .F1(n6));
  jump1_SLICE_99 \jump1.SLICE_99 ( .D1(\jump1.n80 ), .C1(\jump1.n19 ), 
    .B1(\jump1.n67 ), .A1(\jump1.lastPosition_2__N_116 ), .D0(\cube_bot[6] ), 
    .C0(\jump1.n1274 ), .B0(\cube_bot[3] ), .A0(\cube_bot[2] ), 
    .F0(\jump1.n19 ), .F1(\jump1.lastPosition_0__N_118 ));
  jump1_SLICE_101 \jump1.SLICE_101 ( .D1(\jump1.lastPosition[6] ), 
    .C1(\jump1.n12 ), .B1(\cube_bot[6] ), .D0(\cube_bot[5] ), .C0(\jump1.n10 ), 
    .A0(\jump1.lastPosition[5] ), .F0(\jump1.n12 ), .F1(\jump1.n14_adj_148 ));
  jump1_SLICE_103 \jump1.SLICE_103 ( .D1(\jump1.lastPosition[6] ), 
    .C1(\jump1.n12_adj_140 ), .B1(\cube_bot[6] ), .D0(\jump1.lastPosition[5] ), 
    .C0(\jump1.n10_adj_139 ), .B0(\cube_bot[5] ), .F0(\jump1.n12_adj_140 ), 
    .F1(\jump1.n14_adj_147 ));
  jump1_SLICE_105 \jump1.SLICE_105 ( .D1(\cube_bot[7] ), 
    .C1(\jump1.n10_adj_141 ), .B1(\cube_bot[5] ), .A1(\cube_bot[8] ), 
    .D0(\cube_bot[1] ), .C0(\cube_bot[9] ), .B0(\cube_bot[4] ), 
    .A0(\cube_bot[0] ), .F0(\jump1.n10_adj_141 ), .F1(\jump1.n1274 ));
  jump1_SLICE_107 \jump1.SLICE_107 ( .D1(\jump1.lastPosition[4] ), 
    .C1(\jump1.n8 ), .B1(\cube_bot[4] ), .D0(\jump1.lastPosition[3] ), 
    .C0(\jump1.n6_adj_143 ), .B0(\cube_bot[3] ), .F0(\jump1.n8 ), 
    .F1(\jump1.n10 ));
  jump1_SLICE_109 \jump1.SLICE_109 ( .D1(\jump1.lastPosition[4] ), 
    .C1(\jump1.n8_adj_142 ), .B1(\cube_bot[4] ), .D0(\jump1.lastPosition[3] ), 
    .C0(\jump1.n6_c ), .B0(\cube_bot[3] ), .F0(\jump1.n8_adj_142 ), 
    .F1(\jump1.n10_adj_139 ));
  jump1_SLICE_111 \jump1.SLICE_111 ( .D1(\jump1.lastPosition[2] ), 
    .C1(\jump1.n4 ), .B1(\cube_bot[2] ), .D0(\jump1.lastPosition[0] ), 
    .C0(\jump1.lastPosition[1] ), .B0(\cube_bot[1] ), .A0(\cube_bot[0] ), 
    .F0(\jump1.n4 ), .F1(\jump1.n6_c ));
  jump1_SLICE_113 \jump1.SLICE_113 ( .DI1(\jump1.cube_bot_6__N_59[6] ), 
    .D1(\jump1.cube_bot_9__N_53[7] ), .C1(n318), .B1(\jump1.cube_bot_4__N_63 ), 
    .A1(\jump1.n306 ), .D0(\jump1.n1274 ), .C0(\cube_bot[6] ), 
    .B0(\cube_bot[3] ), .A0(\cube_bot[2] ), .CLK(\jump1.slowClk ), 
    .Q1(\cube_bot[6] ), .F0(\jump1.lastPosition_2__N_116 ), 
    .F1(\jump1.cube_bot_6__N_59[6] ));
  jump1_SLICE_115 \jump1.SLICE_115 ( .D1(\jump1.lastPosition[2] ), 
    .C1(\jump1.n4_adj_144 ), .B1(\cube_bot[2] ), .D0(\jump1.lastPosition[0] ), 
    .C0(\jump1.lastPosition[1] ), .B0(\cube_bot[0] ), .A0(\cube_bot[1] ), 
    .F0(\jump1.n4_adj_144 ), .F1(\jump1.n6_adj_143 ));
  jump1_SLICE_117 \jump1.SLICE_117 ( .D0(\jump1.lastPosition[9] ), 
    .C0(\jump1.n18_adj_145 ), .B0(\cube_bot[9] ), .F0(\jump1.n80 ));
  jump1_SLICE_118 \jump1.SLICE_118 ( .D1(\jump1.n3880 ), .C1(n2092), 
    .B1(\jump1.n80 ), .A1(\jump1.n44 ), .D0(\cube_bot[8] ), .B0(\cube_bot[9] ), 
    .F0(n2092), .F1(\jump1.n4400 ));
  jump1_SLICE_119 \jump1.SLICE_119 ( .D1(\jump1.lastPosition[8] ), 
    .C1(\jump1.n16 ), .A1(\cube_bot[8] ), .D0(\jump1.lastPosition[7] ), 
    .C0(\jump1.n14_adj_147 ), .B0(\cube_bot[7] ), .F0(\jump1.n16 ), 
    .F1(\jump1.n18_adj_145 ));
  jump1_SLICE_121 \jump1.SLICE_121 ( .D1(\jump1.lastPosition[8] ), 
    .C1(\jump1.n16_adj_146 ), .A1(\cube_bot[8] ), .D0(\jump1.lastPosition[7] ), 
    .C0(\jump1.n14_adj_148 ), .B0(\cube_bot[7] ), .F0(\jump1.n16_adj_146 ), 
    .F1(\jump1.n18 ));
  jump1_SLICE_123 \jump1.SLICE_123 ( .D1(\cube_bot[8] ), .C1(n1318), 
    .B1(\cube_bot[2] ), .A1(\cube_bot[9] ), .D0(\cube_bot[7] ), 
    .C0(\cube_bot[5] ), .B0(\cube_bot[6] ), .F0(n1318), .F1(n1299));
  jump1_SLICE_126 \jump1.SLICE_126 ( .D1(\jump1.n4_adj_160 ), 
    .C1(\jump1.n11_adj_157 ), .B1(n2092), .A1(\cube_bot[6] ), 
    .D0(\cube_bot[3] ), .C0(\cube_bot[2] ), .F0(\jump1.n11_adj_157 ), 
    .F1(\jump1.n306 ));
  jump1_SLICE_127 \jump1.SLICE_127 ( .D1(\cube_bot[5] ), .C1(\jump1.n335 ), 
    .B1(\cube_bot[4] ), .A1(\cube_bot[7] ), .C0(\cube_bot[0] ), 
    .B0(\cube_bot[1] ), .F0(\jump1.n335 ), .F1(\jump1.n4_adj_160 ));
  jump1_SLICE_129 \jump1.SLICE_129 ( .D1(\cube_bot[5] ), .C1(\jump1.n2094 ), 
    .B1(\cube_bot[2] ), .A1(\cube_bot[1] ), .D0(\cube_bot[3] ), 
    .C0(\cube_bot[4] ), .F0(\jump1.n2094 ), .F1(\jump1.n6_adj_158 ));
  jump1_SLICE_131 \jump1.SLICE_131 ( .D1(n1311), .C1(\jump1.n49 ), 
    .B1(\cube_bot[7] ), .A1(\cube_bot[5] ), .D0(\cube_bot[6] ), 
    .C0(\cube_bot[3] ), .B0(\cube_bot[2] ), .F0(\jump1.n49 ), 
    .F1(\jump1.n3880 ));
  controller1_SLICE_132 \controller1.SLICE_132 ( .D1(ledController_c_7), 
    .C1(n1311), .B1(\cube_bot[3] ), .A1(n1299), .D0(\cube_bot[0] ), 
    .C0(\cube_bot[4] ), .B0(\cube_bot[1] ), .F0(n1311), .F1(n318));
  cube_gen1_SLICE_133 \cube_gen1.SLICE_133 ( .D1(\row[2] ), 
    .C1(\cube_gen1.n4 ), .B1(\cube_bot[2] ), .D0(\cube_bot[0] ), 
    .C0(\cube_bot[1] ), .B0(\row[1] ), .A0(\row[0] ), .F0(\cube_gen1.n4 ), 
    .F1(\cube_gen1.n6_adj_136 ));
  cube_gen1_SLICE_135 \cube_gen1.SLICE_135 ( .D1(\cube_bot[4] ), 
    .C1(\cube_gen1.n8_adj_137 ), .A1(\row[4] ), .D0(\cube_bot[3] ), 
    .C0(\cube_gen1.n6_adj_136 ), .B0(\row[3] ), .F0(\cube_gen1.n8_adj_137 ), 
    .F1(\cube_gen1.n10_c ));
  cube_gen1_SLICE_137 \cube_gen1.SLICE_137 ( .D1(\cube_bot[6] ), 
    .C1(\cube_gen1.n12 ), .B1(\row[6] ), .D0(\cube_bot[5] ), 
    .C0(\cube_gen1.n10_c ), .A0(\row[5] ), .F0(\cube_gen1.n12 ), 
    .F1(\cube_gen1.n14 ));
  cube_gen1_SLICE_139 \cube_gen1.SLICE_139 ( .D1(\cube_bot[8] ), 
    .C1(\cube_gen1.n16 ), .A1(\row[8] ), .D0(\cube_bot[7] ), 
    .C0(\cube_gen1.n14 ), .B0(\row[7] ), .F0(\cube_gen1.n16 ), 
    .F1(\cube_gen1.n18 ));
  cube_gen1_SLICE_142 \cube_gen1.SLICE_142 ( .D0(\cube_gen1.n17 ), 
    .C0(\cube_gen1.n4428 ), .B0(\col[8] ), .A0(\cube_gen1.n1309 ), 
    .F0(\cube_gen1.rgb_c_5_N_125 ));
  cube_gen1_rgb_c_5_N_124_007_SLICE_144 
    \cube_gen1.rgb_c_5_N_124.007.SLICE_144 ( .D0(\cube_gen1.rgb_c_5_N_124 ), 
    .F0(\cube_gen1.rgb_c_5_N_124.sig_007.FeedThruLUT ));
  controller1_SLICE_145 \controller1.SLICE_145 ( 
    .D1(\controller1.slowCount[1] ), .C1(\controller1.controlLatch_c_N_129 ), 
    .B1(\controller1.controlClk_c_N_131 ), .A1(\controller1.slowCount[3] ), 
    .D0(\controller1.slowCount[0] ), .C0(\controller1.slowCount[2] ), 
    .F0(\controller1.controlLatch_c_N_129 ), .F1(controlLatch_c));
  controller1_SLICE_147 \controller1.SLICE_147 ( .D1(\controller1.count[8] ), 
    .C1(\controller1.controlClk_c_N_131 ), .B1(\controller1.slowCount[3] ), 
    .D0(\controller1.slowCount[4] ), .C0(\controller1.slowCount[5] ), 
    .B0(\controller1.slowCount[7] ), .A0(\controller1.slowCount[6] ), 
    .F0(\controller1.controlClk_c_N_131 ), .F1(controlClk_c));
  vga_1_SLICE_154 \vga_1.SLICE_154 ( .D1(\cube_gen1.n18 ), .C1(\cube_bot[9] ), 
    .B1(\row[9] ), .D0(\row[8] ), .C0(\row[9] ), .B0(\row[7] ), 
    .F0(\vga_1.n7 ), .F1(\cube_gen1.n17 ));
  vga_1_SLICE_155 \vga_1.SLICE_155 ( .D0(\col[5] ), .C0(\col[6] ), 
    .A0(\vga_1.col[0] ), .F0(\vga_1.n10_c ));
  vga_1_SLICE_156 \vga_1.SLICE_156 ( .D0(\vga_1.col[2] ), .C0(\vga_1.col[3] ), 
    .A0(\vga_1.col[4] ), .F0(\vga_1.n4607 ));
  jump1_SLICE_158 \jump1.SLICE_158 ( .D0(\cube_bot[7] ), 
    .C0(\jump1.n6_adj_158 ), .B0(\jump1.n65 ), .A0(\cube_bot[6] ), 
    .F0(\jump1.n44 ));
  vga_1_SLICE_159 \vga_1.SLICE_159 ( .D1(\row[1] ), .C1(\row[2] ), 
    .A1(\row[4] ), .D0(\row[2] ), .C0(\row[1] ), .B0(\row[0] ), 
    .F0(\vga_1.VSYNC_c_N_122 ), .F1(\cube_gen1.n37 ));
  SLICE_161 SLICE_161( .F0(GND_net));
  jump1_SLICE_165 \jump1.SLICE_165 ( .D0(\cube_bot[0] ), .F0(n1));
  cube_gen1_SLICE_167 \cube_gen1.SLICE_167 ( .D1(\cube_gen1.cube_top[7] ), 
    .D0(\cube_gen1.cube_top[3] ), .F0(\cube_gen1.n1_2[3] ), 
    .F1(\cube_gen1.n1_2[7] ));
  cube_gen1_SLICE_168 \cube_gen1.SLICE_168 ( .D1(\cube_gen1.cube_top[6] ), 
    .D0(\cube_gen1.cube_top[2] ), .F0(\cube_gen1.n1_2[2] ), 
    .F1(\cube_gen1.n1_2[6] ));
  cube_gen1_SLICE_169 \cube_gen1.SLICE_169 ( .D1(\cube_gen1.cube_top[4] ), 
    .D0(\cube_gen1.cube_top[5] ), .F0(\cube_gen1.n1_2[5] ), 
    .F1(\cube_gen1.n1_2[4] ));
  cube_gen1_SLICE_173 \cube_gen1.SLICE_173 ( .D1(\cube_gen1.cube_top[8] ), 
    .D0(\cube_gen1.cube_top[9] ), .F0(\cube_gen1.n1_2[9] ), 
    .F1(\cube_gen1.n1_2[8] ));
  controller1_SLICE_176 \controller1.SLICE_176 ( .D0(ledController_c_0), 
    .C0(controlLatch_c), .A0(\controller1.intermediate[0] ), 
    .F0(ledController_c_0));
  controller1_SLICE_177 \controller1.SLICE_177 ( .D1(ledController_c_2), 
    .C1(\controller1.intermediate[2] ), .B1(controlLatch_c), 
    .D0(ledController_c_1), .C0(\controller1.intermediate[1] ), 
    .A0(controlLatch_c), .F0(ledController_c_1), .F1(ledController_c_2));
  controller1_SLICE_179 \controller1.SLICE_179 ( .D1(ledController_c_4), 
    .C1(\controller1.intermediate[4] ), .A1(controlLatch_c), 
    .D0(ledController_c_3), .C0(\controller1.intermediate[3] ), 
    .B0(controlLatch_c), .F0(ledController_c_3), .F1(ledController_c_4));
  controller1_SLICE_181 \controller1.SLICE_181 ( .D1(ledController_c_6), 
    .C1(\controller1.intermediate[6] ), .B1(controlLatch_c), 
    .D0(ledController_c_5), .C0(\controller1.intermediate[5] ), 
    .A0(controlLatch_c), .F0(ledController_c_5), .F1(ledController_c_6));
  ledController_pad_0__SLICE_183 \ledController_pad[0].SLICE_183 ( 
    .F0(\ledController_pad[0].vcc ));
  mypll_1_lscc_pll_inst_u_PLL_B \mypll_1.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(fpga_clk_c), .FEEDBACK(\mypll_1.lscc_pll_inst.feedback_w ), 
    .RESET_N(\ledController_pad[0].vcc ), 
    .INTFBOUT(\mypll_1.lscc_pll_inst.feedback_w ), .OUTGLOBAL(vga_clk));
  controller1_osc \controller1.osc ( .CLKHFPU(\ledController_pad[0].vcc ), 
    .CLKHFEN(\ledController_pad[0].vcc ), .CLKHF(\controller1.clk ));
  controllerIn controllerIn_I( .PADDI(controllerIn_c), 
    .controllerIn(controllerIn));
  fpga_clk fpga_clk_I( .PADDI(fpga_clk_c), .fpga_clk(fpga_clk));
  ledController_0_ \ledController[0]_I ( .PADDO(ledController_c_0), 
    .ledController0(ledController[0]));
  ledController_1_ \ledController[1]_I ( .PADDO(ledController_c_1), 
    .ledController1(ledController[1]));
  ledController_2_ \ledController[2]_I ( .PADDO(ledController_c_2), 
    .ledController2(ledController[2]));
  ledController_3_ \ledController[3]_I ( .PADDO(ledController_c_3), 
    .ledController3(ledController[3]));
  ledController_4_ \ledController[4]_I ( .PADDO(ledController_c_4), 
    .ledController4(ledController[4]));
  ledController_5_ \ledController[5]_I ( .PADDO(ledController_c_5), 
    .ledController5(ledController[5]));
  ledController_6_ \ledController[6]_I ( .PADDO(ledController_c_6), 
    .ledController6(ledController[6]));
  ledController_7_ \ledController[7]_I ( .PADDO(ledController_c_7), 
    .ledController7(ledController[7]));
  controlClk controlClk_I( .PADDO(controlClk_c), .controlClk(controlClk));
  controlLatch controlLatch_I( .PADDO(controlLatch_c), 
    .controlLatch(controlLatch));
  rgb_0_ \rgb[0]_I ( .PADDO(GND_net), .rgb0(rgb[0]));
  rgb_1_ \rgb[1]_I ( .PADDO(GND_net), .rgb1(rgb[1]));
  rgb_2_ \rgb[2]_I ( .PADDO(rgb_c_3), .rgb2(rgb[2]));
  rgb_3_ \rgb[3]_I ( .PADDO(rgb_c_3), .rgb3(rgb[3]));
  rgb_4_ \rgb[4]_I ( .PADDO(rgb_c_5), .rgb4(rgb[4]));
  rgb_5_ \rgb[5]_I ( .PADDO(rgb_c_5), .rgb5(rgb[5]));
  VSYNC VSYNC_I( .PADDO(VSYNC_c), .VSYNC(VSYNC));
  HSYNC HSYNC_I( .PADDO(HSYNC_c), .HSYNC(HSYNC));
endmodule

module vga_1_SLICE_0 ( input DI0, D1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/row_9__I_0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vga_1_SLICE_1 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/row_9__I_2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_1/row_9__I_1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_2 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/row_9__I_4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_1/row_9__I_3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_3 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/row_9__I_6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_1/row_9__I_5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_4 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/row_9__I_8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_1/row_9__I_7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_5 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/row_9__I_9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module vga_1_SLICE_6 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \vga_1/scol_221_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/col_9__I_0_2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_1/scol_221_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/col_9__I_11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/col_9__I_10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_1/scol_221_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/col_9__I_13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/col_9__I_12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_1/scol_221_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/col_9__I_15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/col_9__I_14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_1/scol_221_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/col_9__I_17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/col_9__I_16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_11 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \vga_1/scol_221_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/col_9__I_18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module jump1_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \jump1/count_222_251_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/count_222_251__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/count_222_251__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module jump1_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \jump1/count_222_251_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/count_222_251__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/count_222_251__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module jump1_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \jump1/count_222_251_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/count_222_251__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/count_222_251__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module jump1_SLICE_15 ( input DI1, D1, C1, B1, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa2 \jump1/count_222_251_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/count_222_251__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module jump1_SLICE_16 ( input DI0, D1, D0, C0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \jump1/add_2733_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/cube_bot_9__I_0_2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module jump1_SLICE_17 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \jump1/add_2733_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 \jump1/cube_bot_9__I_21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/cube_bot_9__I_20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre20001 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module jump1_SLICE_18 ( input DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \jump1/add_2733_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 \jump1/cube_bot_9__I_22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module jump1_SLICE_19 ( input DI0, D1, D0, C0, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  fa2 \jump1/count_222_251_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/slowClk_I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module jump1_SLICE_20 ( input DI1, D1, C1, B1, D0, C0, B0, LSR, CLK, CIN0, 
    CIN1, output Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \jump1/add_2733_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/cube_bot_9__I_23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module jump1_SLICE_21 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \jump1/count_222_251_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/count_222_251__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/count_222_251__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module jump1_SLICE_22 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \jump1/add_2733_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module jump1_SLICE_23 ( input D1, C1, B1, B0, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \jump1/add_2733_1 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(VCCI), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module jump1_SLICE_24 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \jump1/count_222_251_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/count_222_251__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/count_222_251__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module jump1_SLICE_25 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \jump1/count_222_251_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/count_222_251__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/count_222_251__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module jump1_SLICE_26 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \jump1/count_222_251_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/count_222_251__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/count_222_251__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module jump1_SLICE_27 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \jump1/count_222_251_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/count_222_251__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/count_222_251__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module jump1_SLICE_28 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \jump1/count_222_251_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/count_222_251__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/count_222_251__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module cube_gen1_SLICE_29 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \cube_gen1/cube_top_2__I_0 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_30 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \cube_gen1/add_396_10 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(), .S1(), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_31 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \cube_gen1/add_396_8 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(), .S1(), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_32 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \cube_gen1/add_396_6 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(), .S1(), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_33 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \cube_gen1/add_396_4 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(), .S1(), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_34 ( input D1, C1, B1, C0, B0, CIN1, output COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \cube_gen1/add_396_2 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(VCCI), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_35 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \cube_gen1/cube_top_9__I_0 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_36 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \cube_gen1/cube_top_8__I_0 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_37 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \cube_gen1/cube_top_6__I_0 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_38 ( input D1, B1, D0, C0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \cube_gen1/cube_top_4__I_0 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module controller1_SLICE_39 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_220_252_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_220_252__i6 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_220_252__i7 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_40 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_220_252_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_220_252__i4 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_220_252__i5 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_41 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_220_252_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_220_252__i2 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_220_252__i3 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_42 ( input DI1, D1, C1, B1, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa2 \controller1/count_220_252_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_220_252__i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module controller1_SLICE_43 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_220_252_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_8__I_29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_8__I_28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_44 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_220_252_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_8__I_31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_8__I_30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_45 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_220_252_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_8__I_33 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_8__I_32 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_46 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_220_252_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_8__I_35 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_8__I_34 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_47 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_220_252_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_220_252__i8 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_8__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module jump1_SLICE_48 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \jump1/mux_129_i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40002 \jump1/mux_129_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \jump1/cube_bot_6__I_26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/cube_bot_6__I_27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x3B08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0x5072") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_50 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 \jump1/mux_129_i4_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40004 \jump1/mux_129_i3_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \jump1/cube_bot_6__I_24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/cube_bot_6__I_25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x5D08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xCFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_53 ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40005 SLICE_53_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_53_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 \jump1/cube_bot_0__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/cube_bot_1__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_54 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40007 \jump1/i1495_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40008 \jump1/i1496_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \jump1/lastPosition_6__I_36 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \jump1/lastPosition_6__I_37 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xAF8F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xCD00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_56 ( input DI1, DI0, D1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40005 SLICE_56_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_56_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20001 \jump1/cube_bot_5__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \jump1/cube_bot_4__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_58 ( input DI0, D0, C0, B0, A0, LSR, CLK, output Q0, F0 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40010 \jump1/i1493_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \jump1/lastPosition_6__I_0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xAB00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_59 ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40005 SLICE_59_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_59_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \jump1/cube_bot_8__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \jump1/cube_bot_7__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_61 ( input DI0, D0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40006 SLICE_61_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \jump1/cube_bot_9__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module controller1_SLICE_63 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 \controller1.SLICE_63_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \controller1/i11_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \controller1/intermediate_0__I_0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/intermediate_0__I_19 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module controller1_SLICE_64 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 \controller1.SLICE_64_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \controller1.SLICE_64_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \controller1/intermediate_5__I_0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/intermediate_6__I_0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_66 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 \controller1.SLICE_66_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \controller1.SLICE_66_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \controller1/intermediate_3__I_0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/intermediate_4__I_0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_68 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 \controller1.SLICE_68_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \controller1.SLICE_68_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \controller1/intermediate_1__I_0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/intermediate_2__I_0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module vga_1_SLICE_71 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40012 \vga_1/i3479_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \vga_1/i1_2_lut_adj_46 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_72 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40014 \vga_1/col_9__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \vga_1/i33_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xDFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x3F2E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_73 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40016 \vga_1/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \vga_1/i1525_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_74 ( input D0, C0, B0, A0, output F0 );

  lut40017 \cube_gen1/rgb_c_5_I_0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_75 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40018 \cube_gen1/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40019 \vga_1/i2_3_lut_adj_45 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_77 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 \jump1/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \jump1/i3471_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_78 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40022 \jump1.i184_1_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 \jump1/LessThan_13_i20_3_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_79 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40024 \jump1/i3_4_lut_adj_41 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 \jump1/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module controller1_SLICE_80 ( input D1, C1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40026 \jump1/i9_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 \controller1/ledController_c_7_I_0 ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_81 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40028 \cube_gen1/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \cube_gen1/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xA0B3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_83 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40030 \vga_1/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_84 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \vga_1/VSYNC_c_I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \vga_1/i1544_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xBFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_85 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40033 \cube_gen1/row_6__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 \vga_1/i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0x0500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_86 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40035 \vga_1/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 \cube_gen1/i1505_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_87 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40037 \vga_1/i1_2_lut_adj_43 ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40038 \vga_1/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_89 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40039 \vga_1/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 \vga_1/i1_2_lut_adj_47 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_91 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40041 \cube_gen1/i3481_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \vga_1/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_94 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40043 \cube_gen1/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 \vga_1/i1_4_lut_adj_48 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xC800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_96 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40045 \cube_gen1/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 \cube_gen1/i1_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xFDF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xCCFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_97 ( input D1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40047 \jump1/i6_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \jump1/i1417_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_99 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40048 \jump1/i3727_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \jump1/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xAFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_101 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40050 \jump1/LessThan_13_i14_3_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \jump1/LessThan_13_i12_3_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_103 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40052 \jump1/LessThan_17_i14_3_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \jump1/LessThan_17_i12_3_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_105 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40054 \jump1/i5_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 \jump1/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_107 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40050 \jump1/LessThan_13_i10_3_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \jump1/LessThan_13_i8_3_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_109 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40052 \jump1/LessThan_17_i10_3_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 \jump1/LessThan_17_i8_3_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_111 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40058 \jump1/LessThan_17_i6_3_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \jump1/LessThan_17_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x7130") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_113 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40060 \jump1/mux_129_i7_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40061 \jump1/i3737_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \jump1/cube_bot_6__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xF7C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_115 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \jump1/LessThan_13_i6_3_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \jump1/LessThan_13_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x0A8E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_117 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40053 \jump1/LessThan_17_i20_3_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module jump1_SLICE_118 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40064 \jump1/i3453_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \jump1/i1431_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xCFCE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_119 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40066 \jump1/LessThan_17_i18_3_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \jump1/LessThan_17_i16_3_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_121 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40067 \jump1/LessThan_13_i18_3_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \jump1/LessThan_13_i16_3_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_123 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40068 \controller1.i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40019 \jump1/i1_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_126 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40069 \jump1/i2_4_lut_adj_42 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40070 \jump1/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_127 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40071 \jump1/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40072 \jump1/i141_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_129 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40073 \jump1/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 \jump1/i1433_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xF800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_131 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40074 \jump1/i3_4_lut_adj_39 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40075 \jump1/i62_4_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x0C30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module controller1_SLICE_132 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40076 \controller1/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 \controller1/i1_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_133 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40078 \cube_gen1/LessThan_7_i6_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \cube_gen1/LessThan_7_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xF371") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_135 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40080 \cube_gen1/LessThan_7_i10_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 \cube_gen1/LessThan_7_i8_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_137 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40082 \cube_gen1/LessThan_7_i14_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \cube_gen1/LessThan_7_i12_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_139 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40080 \cube_gen1/LessThan_7_i18_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 \cube_gen1/LessThan_7_i16_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_142 ( input D0, C0, B0, A0, output F0 );

  lut40084 \cube_gen1/i3_4_lut_adj_38 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_rgb_c_5_N_124_007_SLICE_144 ( input D0, output F0 );
  wire   GNDI;

  lut40006 \cube_gen1.rgb_c_5_N_124.007.SLICE_144_K0 ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module controller1_SLICE_145 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40085 \controller1/controlLatch_c_I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40013 \controller1/i2_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module controller1_SLICE_147 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40086 \controller1/controlClk_c_I_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \controller1/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_154 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \cube_gen1/LessThan_7_i20_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \vga_1/i1_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0x0030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_155 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40090 \vga_1/i2_3_lut_adj_44 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x000A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_156 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40091 \vga_1/i3608_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_158 ( input D0, C0, B0, A0, output F0 );

  lut40092 \jump1/i1_4_lut_adj_40 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0x4CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_159 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40093 \cube_gen1/i41_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \vga_1/i19_4_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0x03C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_161 ( output F0 );
  wire   GNDI;

  lut40095 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module jump1_SLICE_165 ( input D0, output F0 );
  wire   GNDI;

  lut40011 \jump1/i356_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_167 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40047 \cube_gen1/sub_44_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \cube_gen1/sub_44_inv_0_i4_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_168 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40047 \cube_gen1/sub_44_inv_0_i7_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \cube_gen1/sub_44_inv_0_i3_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_169 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40047 \cube_gen1/sub_44_inv_0_i5_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \cube_gen1/sub_44_inv_0_i6_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module cube_gen1_SLICE_173 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40047 \cube_gen1/sub_44_inv_0_i9_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \cube_gen1/sub_44_inv_0_i10_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module controller1_SLICE_176 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40096 \controller1/ledController_c_0_I_0 ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module controller1_SLICE_177 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40097 \controller1/ledController_c_2_I_0 ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \controller1/ledController_c_1_I_0 ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module controller1_SLICE_179 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40099 \controller1/ledController_c_4_I_0 ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \controller1/ledController_c_3_I_0 ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module controller1_SLICE_181 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40097 \controller1/ledController_c_6_I_0 ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \controller1/ledController_c_5_I_0 ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledController_pad_0__SLICE_183 ( output F0 );
  wire   GNDI;

  lut40101 \ledController_pad[0].vhi_inst ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mypll_1_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \mypll_1/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.DIVR = "0";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module controller1_osc ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B \controller1/osc ( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), 
    .TRIM9(GNDI), .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), 
    .TRIM4(GNDI), .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), 
    .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module controllerIn ( output PADDI, input controllerIn );
  wire   GNDI;

  BB_B_B \controllerIn_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(controllerIn));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (controllerIn => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module fpga_clk ( output PADDI, input fpga_clk );
  wire   GNDI;

  BB_B_B \fpga_clk_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(fpga_clk));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (fpga_clk => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledController_0_ ( input PADDO, output ledController0 );
  wire   VCCI;

  BB_B_B \ledController_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(ledController0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledController0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledController_1_ ( input PADDO, output ledController1 );
  wire   VCCI;

  BB_B_B \ledController_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(ledController1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledController1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledController_2_ ( input PADDO, output ledController2 );
  wire   VCCI;

  BB_B_B \ledController_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(ledController2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledController2) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledController_3_ ( input PADDO, output ledController3 );
  wire   VCCI;

  BB_B_B \ledController_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(ledController3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledController3) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledController_4_ ( input PADDO, output ledController4 );
  wire   VCCI;

  BB_B_B \ledController_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(ledController4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledController4) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledController_5_ ( input PADDO, output ledController5 );
  wire   VCCI;

  BB_B_B \ledController_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(ledController5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledController5) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledController_6_ ( input PADDO, output ledController6 );
  wire   VCCI;

  BB_B_B \ledController_pad[6].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(ledController6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledController6) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledController_7_ ( input PADDO, output ledController7 );
  wire   VCCI;

  BB_B_B \ledController_pad[7].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(ledController7));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledController7) = (0:0:0,0:0:0);
  endspecify

endmodule

module controlClk ( input PADDO, output controlClk );
  wire   VCCI;

  BB_B_B \controlClk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(controlClk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => controlClk) = (0:0:0,0:0:0);
  endspecify

endmodule

module controlLatch ( input PADDO, output controlLatch );
  wire   VCCI;

  BB_B_B \controlLatch_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(controlLatch));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => controlLatch) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_0_ ( input PADDO, output rgb0 );
  wire   VCCI;

  BB_B_B \rgb_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb0) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_1_ ( input PADDO, output rgb1 );
  wire   VCCI;

  BB_B_B \rgb_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb1) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_2_ ( input PADDO, output rgb2 );
  wire   VCCI;

  BB_B_B \rgb_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb2) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_3_ ( input PADDO, output rgb3 );
  wire   VCCI;

  BB_B_B \rgb_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb3) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_4_ ( input PADDO, output rgb4 );
  wire   VCCI;

  BB_B_B \rgb_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb4) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_5_ ( input PADDO, output rgb5 );
  wire   VCCI;

  BB_B_B \rgb_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb5) = (0:0:0,0:0:0);
  endspecify

endmodule

module VSYNC ( input PADDO, output VSYNC );
  wire   VCCI;

  BB_B_B \VSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module HSYNC ( input PADDO, output HSYNC );
  wire   VCCI;

  BB_B_B \HSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(HSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => HSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule
