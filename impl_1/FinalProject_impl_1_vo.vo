
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui FinalProject_impl_1.udb 
// Netlist created on Thu Nov 30 16:44:17 2023
// Netlist written on Thu Nov 30 16:44:19 2023
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( rgb, VSYNC, HSYNC, controlLatch, controlClk, fpga_clk, 
             controllerIn );
  input  fpga_clk, controllerIn;
  output [5:0] rgb;
  output VSYNC, HSYNC, controlLatch, controlClk;
  wire   \vga_1.row_9__N_1[2] , \vga_1.row_9__N_1[1] , \vga_1.n1862 , \row[2] , 
         \vga_1.n1107 , \row[1] , row_0__N_29, row_0__N_30, vga_clk, 
         \vga_1.n1109 , \vga_1.row_9__N_1[0] , \vga_1.n1859 , \rgb_pad[2].vcc , 
         \row[0] , \vga_1.col_9__N_31[9] , \vga_1.n1856 , \vga_1.n1086 , 
         \col[9] , col_0__N_50, \vga_1.col_9__N_31[4] , \vga_1.col_9__N_31[3] , 
         \vga_1.n1847 , \col[4] , \vga_1.n1080 , \col[3] , \vga_1.n1082 , 
         \vga_1.col_9__N_31[0] , \vga_1.n1835 , \vga_1.col[0] , \vga_1.n1078 , 
         \vga_1.row_9__N_1[9] , \vga_1.n1874 , \vga_1.n1115 , \row[9] , 
         \vga_1.col_9__N_31[8] , \vga_1.col_9__N_31[7] , \vga_1.n1853 , 
         \col[8] , \vga_1.n1084 , \col[7] , \vga_1.row_9__N_1[8] , 
         \vga_1.row_9__N_1[7] , \vga_1.n1871 , \row[8] , \vga_1.n1113 , 
         \row[7] , \vga_1.col_9__N_31[2] , \vga_1.col_9__N_31[1] , 
         \vga_1.n1844 , \col[2] , \col[1] , \vga_1.row_9__N_1[6] , 
         \vga_1.row_9__N_1[5] , \vga_1.n1868 , \row[6] , \vga_1.n1111 , 
         \row[5] , \vga_1.row_9__N_1[4] , \vga_1.row_9__N_1[3] , \vga_1.n1865 , 
         \row[4] , \row[3] , \vga_1.col_9__N_31[6] , \vga_1.col_9__N_31[5] , 
         \vga_1.n1850 , \col[6] , \col[5] , \controller1.count_8__N_51[12] , 
         \controller1.count_8__N_51[11] , \controller1.n1892 , 
         \controller1.slowCount[3] , \controller1.n1099 , 
         \controller1.slowCount[2] , \controller1.clk , \controller1.n1101 , 
         \controller1.count_8__N_51[4] , \controller1.count_8__N_51[3] , 
         \controller1.n1880 , \controller1.n13 , \controller1.n1091 , 
         \controller1.n14 , \controller1.n1093 , 
         \controller1.count_8__N_51[10] , \controller1.count_8__N_51[9] , 
         \controller1.n1889 , \controller1.slowCount[1] , \controller1.n1097 , 
         \controller1.slowCount[0] , \controller1.count_8__N_51[8] , 
         \controller1.count_8__N_51[7] , \controller1.n1886 , 
         \controller1.count[8] , \controller1.n1095 , \controller1.n10 , 
         \controller1.count_8__N_51[16] , \controller1.count_8__N_51[15] , 
         \controller1.n1898 , \controller1.slowCount[7] , \controller1.n1103 , 
         \controller1.slowCount[6] , \controller1.count_8__N_51[6] , 
         \controller1.count_8__N_51[5] , \controller1.n1883 , 
         \controller1.n11 , \controller1.n12 , \controller1.count_8__N_51[2] , 
         \controller1.count_8__N_51[1] , \controller1.n1877 , 
         \controller1.n15 , \controller1.n1089 , \controller1.n16 , 
         \controller1.count_8__N_51[0] , \controller1.n1841 , 
         \controller1.n17 , \controller1.count_8__N_51[14] , 
         \controller1.count_8__N_51[13] , \controller1.n1895 , 
         \controller1.slowCount[5] , \controller1.slowCount[4] , 
         \cube_gen1.n1510 , n856, \cube_gen1.n1511 , n1513, n32, 
         \cube_gen1.n1516 , \cube_gen1.n1423 , \cube_gen1.rgb_c_3_N_67 , 
         \vga_1.n1508 , \vga_1.n44 , \vga_1.HSYNC_c_N_62 , n822, n436, n10, 
         \cube_gen1.n36 , \vga_1.rgb_c_5_N_65 , \cube_gen1.n1329 , 
         \cube_gen1.rgb_c_3_N_68 , \cube_gen1.rgb_c_3_N_69 , rgb_c_3, n8, 
         \vga_1.VSYNC_c_N_64 , \vga_1.VSYNC_c_N_63 , VSYNC_c, 
         \vga_1.rgb_c_5_N_66 , rgb_c_5, \vga_1.n14 , \vga_1.n15 , 
         \vga_1.HSYNC_c_N_61 , \vga_1.HSYNC_c_N_60 , HSYNC_c, 
         \controller1.controlClk_c_N_72 , controlClk_c, 
         \controller1.controlLatch_c_N_71 , controlLatch_c, GND_net, 
         fpga_clk_c, \mypll_1.lscc_pll_inst.feedback_w ;

  vga_1_SLICE_0 \vga_1.SLICE_0 ( .DI1(\vga_1.row_9__N_1[2] ), 
    .DI0(\vga_1.row_9__N_1[1] ), .D1(\vga_1.n1862 ), .B1(\row[2] ), 
    .D0(\vga_1.n1107 ), .B0(\row[1] ), .CE(row_0__N_29), .LSR(row_0__N_30), 
    .CLK(vga_clk), .CIN0(\vga_1.n1107 ), .CIN1(\vga_1.n1862 ), .Q0(\row[1] ), 
    .Q1(\row[2] ), .F0(\vga_1.row_9__N_1[1] ), .F1(\vga_1.row_9__N_1[2] ), 
    .COUT1(\vga_1.n1109 ), .COUT0(\vga_1.n1862 ));
  vga_1_SLICE_1 \vga_1.SLICE_1 ( .DI1(\vga_1.row_9__N_1[0] ), 
    .D1(\vga_1.n1859 ), .C1(\rgb_pad[2].vcc ), .B1(\row[0] ), .CE(row_0__N_29), 
    .LSR(row_0__N_30), .CLK(vga_clk), .CIN1(\vga_1.n1859 ), .Q1(\row[0] ), 
    .F1(\vga_1.row_9__N_1[0] ), .COUT1(\vga_1.n1107 ), .COUT0(\vga_1.n1859 ));
  vga_1_SLICE_2 \vga_1.SLICE_2 ( .DI0(\vga_1.col_9__N_31[9] ), 
    .D1(\vga_1.n1856 ), .D0(\vga_1.n1086 ), .C0(\col[9] ), .LSR(col_0__N_50), 
    .CLK(vga_clk), .CIN0(\vga_1.n1086 ), .CIN1(\vga_1.n1856 ), .Q0(\col[9] ), 
    .F0(\vga_1.col_9__N_31[9] ), .COUT0(\vga_1.n1856 ));
  vga_1_SLICE_3 \vga_1.SLICE_3 ( .DI1(\vga_1.col_9__N_31[4] ), 
    .DI0(\vga_1.col_9__N_31[3] ), .D1(\vga_1.n1847 ), .C1(\col[4] ), 
    .D0(\vga_1.n1080 ), .C0(\col[3] ), .LSR(col_0__N_50), .CLK(vga_clk), 
    .CIN0(\vga_1.n1080 ), .CIN1(\vga_1.n1847 ), .Q0(\col[3] ), .Q1(\col[4] ), 
    .F0(\vga_1.col_9__N_31[3] ), .F1(\vga_1.col_9__N_31[4] ), 
    .COUT1(\vga_1.n1082 ), .COUT0(\vga_1.n1847 ));
  vga_1_SLICE_4 \vga_1.SLICE_4 ( .DI1(\vga_1.col_9__N_31[0] ), 
    .D1(\vga_1.n1835 ), .C1(\vga_1.col[0] ), .B1(\rgb_pad[2].vcc ), 
    .LSR(col_0__N_50), .CLK(vga_clk), .CIN1(\vga_1.n1835 ), 
    .Q1(\vga_1.col[0] ), .F1(\vga_1.col_9__N_31[0] ), .COUT1(\vga_1.n1078 ), 
    .COUT0(\vga_1.n1835 ));
  vga_1_SLICE_5 \vga_1.SLICE_5 ( .DI0(\vga_1.row_9__N_1[9] ), 
    .D1(\vga_1.n1874 ), .D0(\vga_1.n1115 ), .B0(\row[9] ), .CE(row_0__N_29), 
    .LSR(row_0__N_30), .CLK(vga_clk), .CIN0(\vga_1.n1115 ), 
    .CIN1(\vga_1.n1874 ), .Q0(\row[9] ), .F0(\vga_1.row_9__N_1[9] ), 
    .COUT0(\vga_1.n1874 ));
  vga_1_SLICE_6 \vga_1.SLICE_6 ( .DI1(\vga_1.col_9__N_31[8] ), 
    .DI0(\vga_1.col_9__N_31[7] ), .D1(\vga_1.n1853 ), .C1(\col[8] ), 
    .D0(\vga_1.n1084 ), .C0(\col[7] ), .LSR(col_0__N_50), .CLK(vga_clk), 
    .CIN0(\vga_1.n1084 ), .CIN1(\vga_1.n1853 ), .Q0(\col[7] ), .Q1(\col[8] ), 
    .F0(\vga_1.col_9__N_31[7] ), .F1(\vga_1.col_9__N_31[8] ), 
    .COUT1(\vga_1.n1086 ), .COUT0(\vga_1.n1853 ));
  vga_1_SLICE_7 \vga_1.SLICE_7 ( .DI1(\vga_1.row_9__N_1[8] ), 
    .DI0(\vga_1.row_9__N_1[7] ), .D1(\vga_1.n1871 ), .B1(\row[8] ), 
    .D0(\vga_1.n1113 ), .B0(\row[7] ), .CE(row_0__N_29), .LSR(row_0__N_30), 
    .CLK(vga_clk), .CIN0(\vga_1.n1113 ), .CIN1(\vga_1.n1871 ), .Q0(\row[7] ), 
    .Q1(\row[8] ), .F0(\vga_1.row_9__N_1[7] ), .F1(\vga_1.row_9__N_1[8] ), 
    .COUT1(\vga_1.n1115 ), .COUT0(\vga_1.n1871 ));
  vga_1_SLICE_8 \vga_1.SLICE_8 ( .DI1(\vga_1.col_9__N_31[2] ), 
    .DI0(\vga_1.col_9__N_31[1] ), .D1(\vga_1.n1844 ), .C1(\col[2] ), 
    .D0(\vga_1.n1078 ), .C0(\col[1] ), .LSR(col_0__N_50), .CLK(vga_clk), 
    .CIN0(\vga_1.n1078 ), .CIN1(\vga_1.n1844 ), .Q0(\col[1] ), .Q1(\col[2] ), 
    .F0(\vga_1.col_9__N_31[1] ), .F1(\vga_1.col_9__N_31[2] ), 
    .COUT1(\vga_1.n1080 ), .COUT0(\vga_1.n1844 ));
  vga_1_SLICE_9 \vga_1.SLICE_9 ( .DI1(\vga_1.row_9__N_1[6] ), 
    .DI0(\vga_1.row_9__N_1[5] ), .D1(\vga_1.n1868 ), .B1(\row[6] ), 
    .D0(\vga_1.n1111 ), .B0(\row[5] ), .CE(row_0__N_29), .LSR(row_0__N_30), 
    .CLK(vga_clk), .CIN0(\vga_1.n1111 ), .CIN1(\vga_1.n1868 ), .Q0(\row[5] ), 
    .Q1(\row[6] ), .F0(\vga_1.row_9__N_1[5] ), .F1(\vga_1.row_9__N_1[6] ), 
    .COUT1(\vga_1.n1113 ), .COUT0(\vga_1.n1868 ));
  vga_1_SLICE_10 \vga_1.SLICE_10 ( .DI1(\vga_1.row_9__N_1[4] ), 
    .DI0(\vga_1.row_9__N_1[3] ), .D1(\vga_1.n1865 ), .B1(\row[4] ), 
    .D0(\vga_1.n1109 ), .B0(\row[3] ), .CE(row_0__N_29), .LSR(row_0__N_30), 
    .CLK(vga_clk), .CIN0(\vga_1.n1109 ), .CIN1(\vga_1.n1865 ), .Q0(\row[3] ), 
    .Q1(\row[4] ), .F0(\vga_1.row_9__N_1[3] ), .F1(\vga_1.row_9__N_1[4] ), 
    .COUT1(\vga_1.n1111 ), .COUT0(\vga_1.n1865 ));
  vga_1_SLICE_11 \vga_1.SLICE_11 ( .DI1(\vga_1.col_9__N_31[6] ), 
    .DI0(\vga_1.col_9__N_31[5] ), .D1(\vga_1.n1850 ), .C1(\col[6] ), 
    .D0(\vga_1.n1082 ), .C0(\col[5] ), .LSR(col_0__N_50), .CLK(vga_clk), 
    .CIN0(\vga_1.n1082 ), .CIN1(\vga_1.n1850 ), .Q0(\col[5] ), .Q1(\col[6] ), 
    .F0(\vga_1.col_9__N_31[5] ), .F1(\vga_1.col_9__N_31[6] ), 
    .COUT1(\vga_1.n1084 ), .COUT0(\vga_1.n1850 ));
  controller1_SLICE_12 \controller1.SLICE_12 ( 
    .DI1(\controller1.count_8__N_51[12] ), 
    .DI0(\controller1.count_8__N_51[11] ), .D1(\controller1.n1892 ), 
    .C1(\controller1.slowCount[3] ), .D0(\controller1.n1099 ), 
    .C0(\controller1.slowCount[2] ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n1099 ), .CIN1(\controller1.n1892 ), 
    .Q0(\controller1.slowCount[2] ), .Q1(\controller1.slowCount[3] ), 
    .F0(\controller1.count_8__N_51[11] ), .F1(\controller1.count_8__N_51[12] ), 
    .COUT1(\controller1.n1101 ), .COUT0(\controller1.n1892 ));
  controller1_SLICE_13 \controller1.SLICE_13 ( 
    .DI1(\controller1.count_8__N_51[4] ), .DI0(\controller1.count_8__N_51[3] ), 
    .D1(\controller1.n1880 ), .C1(\controller1.n13 ), .D0(\controller1.n1091 ), 
    .C0(\controller1.n14 ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n1091 ), .CIN1(\controller1.n1880 ), 
    .Q0(\controller1.n14 ), .Q1(\controller1.n13 ), 
    .F0(\controller1.count_8__N_51[3] ), .F1(\controller1.count_8__N_51[4] ), 
    .COUT1(\controller1.n1093 ), .COUT0(\controller1.n1880 ));
  controller1_SLICE_14 \controller1.SLICE_14 ( 
    .DI1(\controller1.count_8__N_51[10] ), 
    .DI0(\controller1.count_8__N_51[9] ), .D1(\controller1.n1889 ), 
    .C1(\controller1.slowCount[1] ), .D0(\controller1.n1097 ), 
    .C0(\controller1.slowCount[0] ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n1097 ), .CIN1(\controller1.n1889 ), 
    .Q0(\controller1.slowCount[0] ), .Q1(\controller1.slowCount[1] ), 
    .F0(\controller1.count_8__N_51[9] ), .F1(\controller1.count_8__N_51[10] ), 
    .COUT1(\controller1.n1099 ), .COUT0(\controller1.n1889 ));
  controller1_SLICE_15 \controller1.SLICE_15 ( 
    .DI1(\controller1.count_8__N_51[8] ), .DI0(\controller1.count_8__N_51[7] ), 
    .D1(\controller1.n1886 ), .C1(\controller1.count[8] ), 
    .D0(\controller1.n1095 ), .C0(\controller1.n10 ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n1095 ), .CIN1(\controller1.n1886 ), 
    .Q0(\controller1.n10 ), .Q1(\controller1.count[8] ), 
    .F0(\controller1.count_8__N_51[7] ), .F1(\controller1.count_8__N_51[8] ), 
    .COUT1(\controller1.n1097 ), .COUT0(\controller1.n1886 ));
  controller1_SLICE_16 \controller1.SLICE_16 ( 
    .DI1(\controller1.count_8__N_51[16] ), 
    .DI0(\controller1.count_8__N_51[15] ), .D1(\controller1.n1898 ), 
    .C1(\controller1.slowCount[7] ), .D0(\controller1.n1103 ), 
    .C0(\controller1.slowCount[6] ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n1103 ), .CIN1(\controller1.n1898 ), 
    .Q0(\controller1.slowCount[6] ), .Q1(\controller1.slowCount[7] ), 
    .F0(\controller1.count_8__N_51[15] ), .F1(\controller1.count_8__N_51[16] ), 
    .COUT0(\controller1.n1898 ));
  controller1_SLICE_17 \controller1.SLICE_17 ( 
    .DI1(\controller1.count_8__N_51[6] ), .DI0(\controller1.count_8__N_51[5] ), 
    .D1(\controller1.n1883 ), .C1(\controller1.n11 ), .D0(\controller1.n1093 ), 
    .C0(\controller1.n12 ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n1093 ), .CIN1(\controller1.n1883 ), 
    .Q0(\controller1.n12 ), .Q1(\controller1.n11 ), 
    .F0(\controller1.count_8__N_51[5] ), .F1(\controller1.count_8__N_51[6] ), 
    .COUT1(\controller1.n1095 ), .COUT0(\controller1.n1883 ));
  controller1_SLICE_18 \controller1.SLICE_18 ( 
    .DI1(\controller1.count_8__N_51[2] ), .DI0(\controller1.count_8__N_51[1] ), 
    .D1(\controller1.n1877 ), .C1(\controller1.n15 ), .D0(\controller1.n1089 ), 
    .C0(\controller1.n16 ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n1089 ), .CIN1(\controller1.n1877 ), 
    .Q0(\controller1.n16 ), .Q1(\controller1.n15 ), 
    .F0(\controller1.count_8__N_51[1] ), .F1(\controller1.count_8__N_51[2] ), 
    .COUT1(\controller1.n1091 ), .COUT0(\controller1.n1877 ));
  controller1_SLICE_19 \controller1.SLICE_19 ( 
    .DI1(\controller1.count_8__N_51[0] ), .D1(\controller1.n1841 ), 
    .C1(\controller1.n17 ), .B1(\rgb_pad[2].vcc ), .CLK(\controller1.clk ), 
    .CIN1(\controller1.n1841 ), .Q1(\controller1.n17 ), 
    .F1(\controller1.count_8__N_51[0] ), .COUT1(\controller1.n1089 ), 
    .COUT0(\controller1.n1841 ));
  controller1_SLICE_20 \controller1.SLICE_20 ( 
    .DI1(\controller1.count_8__N_51[14] ), 
    .DI0(\controller1.count_8__N_51[13] ), .D1(\controller1.n1895 ), 
    .C1(\controller1.slowCount[5] ), .D0(\controller1.n1101 ), 
    .C0(\controller1.slowCount[4] ), .CLK(\controller1.clk ), 
    .CIN0(\controller1.n1101 ), .CIN1(\controller1.n1895 ), 
    .Q0(\controller1.slowCount[4] ), .Q1(\controller1.slowCount[5] ), 
    .F0(\controller1.count_8__N_51[13] ), .F1(\controller1.count_8__N_51[14] ), 
    .COUT1(\controller1.n1103 ), .COUT0(\controller1.n1895 ));
  cube_gen1_SLICE_21 \cube_gen1.SLICE_21 ( .D1(\col[4] ), 
    .C1(\cube_gen1.n1510 ), .B1(n856), .A1(\cube_gen1.n1511 ), .D0(n1513), 
    .C0(n856), .B0(\col[3] ), .A0(\col[5] ), .F0(\cube_gen1.n1510 ), .F1(n32));
  cube_gen1_SLICE_23 \cube_gen1.SLICE_23 ( .D1(\row[4] ), 
    .C1(\cube_gen1.n1516 ), .B1(\row[3] ), .A1(\cube_gen1.n1423 ), 
    .D0(\row[0] ), .C0(\row[3] ), .B0(\row[1] ), .A0(\row[2] ), 
    .F0(\cube_gen1.n1516 ), .F1(\cube_gen1.rgb_c_3_N_67 ));
  vga_1_SLICE_25 \vga_1.SLICE_25 ( .D1(\vga_1.n1508 ), .C1(\vga_1.n44 ), 
    .B1(\col[3] ), .A1(\col[7] ), .D0(\col[6] ), .C0(\col[2] ), .B0(\col[7] ), 
    .A0(\col[5] ), .F0(\vga_1.n44 ), .F1(\vga_1.HSYNC_c_N_62 ));
  cube_gen1_SLICE_27 \cube_gen1.SLICE_27 ( .D1(n822), .C1(n436), .B1(\row[4] ), 
    .A1(\row[3] ), .D0(\row[8] ), .C0(\row[7] ), .B0(\row[6] ), .A0(\row[5] ), 
    .F0(n436), .F1(n856));
  vga_1_SLICE_28 \vga_1.SLICE_28 ( .D1(\row[0] ), .C1(n10), .B1(\row[3] ), 
    .A1(\row[1] ), .D0(\row[4] ), .C0(\row[9] ), .B0(\row[2] ), .A0(n436), 
    .F0(n10), .F1(row_0__N_30));
  cube_gen1_SLICE_29 \cube_gen1.SLICE_29 ( .D1(\col[6] ), .C1(\col[8] ), 
    .B1(\col[7] ), .C0(\col[7] ), .B0(\col[8] ), .A0(\col[9] ), 
    .F0(\cube_gen1.n36 ), .F1(\vga_1.rgb_c_5_N_65 ));
  cube_gen1_SLICE_30 \cube_gen1.SLICE_30 ( .D1(\cube_gen1.n36 ), 
    .C1(\cube_gen1.n1329 ), .B1(\row[7] ), .A1(\row[6] ), .D0(\col[6] ), 
    .C0(n32), .B0(\col[8] ), .A0(\col[7] ), .F0(\cube_gen1.n1329 ), 
    .F1(\cube_gen1.rgb_c_3_N_68 ));
  cube_gen1_SLICE_31 \cube_gen1.SLICE_31 ( .D1(\cube_gen1.rgb_c_3_N_67 ), 
    .C1(\cube_gen1.rgb_c_3_N_69 ), .B1(\cube_gen1.rgb_c_3_N_68 ), 
    .A1(\row[8] ), .D0(\row[9] ), .C0(\row[5] ), .F0(\cube_gen1.rgb_c_3_N_69 ), 
    .F1(rgb_c_3));
  SLICE_34 SLICE_34( .D0(col_0__N_50), .C0(row_0__N_30), .F0(row_0__N_29));
  cube_gen1_SLICE_35 \cube_gen1.SLICE_35 ( .D1(\row[4] ), .C1(n8), 
    .B1(\row[8] ), .A1(\row[9] ), .D0(\row[0] ), .C0(\row[2] ), .B0(\row[1] ), 
    .F0(n8), .F1(\vga_1.VSYNC_c_N_64 ));
  cube_gen1_SLICE_37 \cube_gen1.SLICE_37 ( .D1(\row[2] ), .C1(\row[1] ), 
    .D0(\row[0] ), .C0(\row[2] ), .B0(\row[1] ), .F0(n822), 
    .F1(\cube_gen1.n1423 ));
  vga_1_SLICE_39 \vga_1.SLICE_39 ( .D1(\vga_1.VSYNC_c_N_64 ), 
    .C1(\vga_1.VSYNC_c_N_63 ), .B1(\row[3] ), .D0(\row[6] ), .C0(\row[5] ), 
    .B0(\row[7] ), .F0(\vga_1.VSYNC_c_N_63 ), .F1(VSYNC_c));
  vga_1_SLICE_41 \vga_1.SLICE_41 ( .D1(\vga_1.rgb_c_5_N_65 ), 
    .C1(\vga_1.rgb_c_5_N_66 ), .B1(\row[9] ), .A1(\col[9] ), 
    .D0(\vga_1.VSYNC_c_N_63 ), .C0(n32), .B0(\row[8] ), 
    .F0(\vga_1.rgb_c_5_N_66 ), .F1(rgb_c_5));
  vga_1_SLICE_43 \vga_1.SLICE_43 ( .D1(\vga_1.n14 ), .C1(\vga_1.n15 ), 
    .B1(\col[4] ), .A1(\col[5] ), .D0(\col[9] ), .C0(\col[6] ), .B0(\col[3] ), 
    .A0(\col[7] ), .F0(\vga_1.n15 ), .F1(col_0__N_50));
  vga_1_SLICE_45 \vga_1.SLICE_45 ( .D0(\col[9] ), .C0(\col[8] ), 
    .F0(\vga_1.HSYNC_c_N_61 ));
  vga_1_SLICE_46 \vga_1.SLICE_46 ( .D1(\col[4] ), .C1(\vga_1.HSYNC_c_N_60 ), 
    .B1(\vga_1.HSYNC_c_N_61 ), .A1(\vga_1.HSYNC_c_N_62 ), .D0(\col[6] ), 
    .C0(\col[5] ), .B0(\col[7] ), .F0(\vga_1.HSYNC_c_N_60 ), .F1(HSYNC_c));
  controller1_SLICE_47 \controller1.SLICE_47 ( .D1(\controller1.count[8] ), 
    .C1(\controller1.controlClk_c_N_72 ), .B1(\controller1.slowCount[3] ), 
    .D0(\controller1.slowCount[4] ), .C0(\controller1.slowCount[5] ), 
    .B0(\controller1.slowCount[7] ), .A0(\controller1.slowCount[6] ), 
    .F0(\controller1.controlClk_c_N_72 ), .F1(controlClk_c));
  controller1_SLICE_49 \controller1.SLICE_49 ( .D1(\controller1.slowCount[3] ), 
    .C1(\controller1.controlLatch_c_N_71 ), 
    .B1(\controller1.controlClk_c_N_72 ), .A1(\controller1.slowCount[2] ), 
    .D0(\controller1.slowCount[0] ), .C0(\controller1.slowCount[1] ), 
    .F0(\controller1.controlLatch_c_N_71 ), .F1(controlLatch_c));
  vga_1_SLICE_53 \vga_1.SLICE_53 ( .D1(\col[2] ), .C1(\vga_1.col[0] ), 
    .B1(\col[1] ), .A1(\col[8] ), .D0(\vga_1.col[0] ), .C0(\col[1] ), 
    .A0(\col[2] ), .F0(n1513), .F1(\vga_1.n14 ));
  SLICE_55 SLICE_55( .F0(GND_net));
  cube_gen1_SLICE_56 \cube_gen1.SLICE_56 ( .D1(\col[5] ), .C1(\col[6] ), 
    .D0(\col[5] ), .C0(\col[1] ), .B0(\col[3] ), .A0(\col[2] ), 
    .F0(\cube_gen1.n1511 ), .F1(\vga_1.n1508 ));
  rgb_pad_2__SLICE_60 \rgb_pad[2].SLICE_60 ( .F0(\rgb_pad[2].vcc ));
  controller1_osc \controller1.osc ( .CLKHFPU(\rgb_pad[2].vcc ), 
    .CLKHFEN(\rgb_pad[2].vcc ), .CLKHF(\controller1.clk ));
  mypll_1_lscc_pll_inst_u_PLL_B \mypll_1.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(fpga_clk_c), .FEEDBACK(\mypll_1.lscc_pll_inst.feedback_w ), 
    .RESET_N(\rgb_pad[2].vcc ), .INTFBOUT(\mypll_1.lscc_pll_inst.feedback_w ), 
    .OUTGLOBAL(vga_clk));
  rgb_2_ \rgb[2]_I ( .PADDO(rgb_c_3), .rgb2(rgb[2]));
  rgb_3_ \rgb[3]_I ( .PADDO(rgb_c_3), .rgb3(rgb[3]));
  rgb_4_ \rgb[4]_I ( .PADDO(rgb_c_5), .rgb4(rgb[4]));
  rgb_5_ \rgb[5]_I ( .PADDO(rgb_c_5), .rgb5(rgb[5]));
  VSYNC VSYNC_I( .PADDO(VSYNC_c), .VSYNC(VSYNC));
  HSYNC HSYNC_I( .PADDO(HSYNC_c), .HSYNC(HSYNC));
  rgb_1_ \rgb[1]_I ( .PADDO(GND_net), .rgb1(rgb[1]));
  rgb_0_ \rgb[0]_I ( .PADDO(GND_net), .rgb0(rgb[0]));
  controlLatch controlLatch_I( .PADDO(controlLatch_c), 
    .controlLatch(controlLatch));
  controlClk controlClk_I( .PADDO(controlClk_c), .controlClk(controlClk));
  fpga_clk fpga_clk_I( .PADDI(fpga_clk_c), .fpga_clk(fpga_clk));
endmodule

module vga_1_SLICE_0 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/row_9__I_8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_1/row_9__I_7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vga_1_SLICE_1 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/row_9__I_9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module vga_1_SLICE_2 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \vga_1/scol_48_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/col_9__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_1/scol_48_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/col_9__I_15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/col_9__I_14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_4 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \vga_1/scol_48_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/col_9__I_18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_5 ( input DI0, D1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/row_9__I_0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_1/scol_48_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/col_9__I_11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/col_9__I_10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_7 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/row_9__I_2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_1/row_9__I_1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_1/scol_48_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/col_9__I_17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/col_9__I_16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_9 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/row_9__I_4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_1/row_9__I_3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_10 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_1/add_5_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/row_9__I_6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_1/row_9__I_5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vga_1_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_1/scol_48_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_1/col_9__I_13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_1/col_9__I_12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module controller1_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_47_58_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_8__I_24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_8__I_23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_47_58_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_47_58__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_47_58__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_47_58_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_8__I_26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_8__I_25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_47_58_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_47_58__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_8__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_16 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_47_58_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_8__I_20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_8__I_19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_17 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_47_58_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_47_58__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_47_58__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_18 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_47_58_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_47_58__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_47_58__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module controller1_SLICE_19 ( input DI1, D1, C1, B1, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa2 \controller1/count_47_58_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_47_58__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module controller1_SLICE_20 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \controller1/count_47_58_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \controller1/count_8__I_22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \controller1/count_8__I_21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module cube_gen1_SLICE_21 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut4 \cube_gen1/i50_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 \cube_gen1/i1210_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xF022") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0x0504") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_23 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40002 \cube_gen1/i48_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40003 \cube_gen1/i1199_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xF011") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_25 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40004 \vga_1/i46_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 \vga_1/i45_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xFC74") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xB337") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_27 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40006 \vga_1/i663_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 \cube_gen1/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_28 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40008 \cube_gen1/i1261_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40009 \vga_1/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xFFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_29 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40010 \vga_1/i2_3_lut_adj_27 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \cube_gen1/i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x0C00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xA8A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_30 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40012 \cube_gen1/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \cube_gen1/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_31 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40014 \cube_gen1/row_8__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \cube_gen1/i1134_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_34 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40016 i50_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_35 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40017 \vga_1/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \cube_gen1/i19_4_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x0C30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_37 ( input D1, C1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40019 \cube_gen1/i1122_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \cube_gen1/i630_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xF0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_39 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40021 \vga_1/VSYNC_c_I_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 \vga_1/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x3FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_41 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40023 \vga_1/rgb_c_5_I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 \vga_1/i1_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0x30F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_43 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40025 \vga_1/i8_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \vga_1/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_45 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40027 \vga_1/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_46 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40028 \vga_1/HSYNC_c_I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \vga_1/i1211_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xBB3F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module controller1_SLICE_47 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 \controller1/controlClk_c_I_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40031 \controller1/i1118_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module controller1_SLICE_49 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40032 \controller1/controlLatch_c_I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40033 \controller1/i1120_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_1_SLICE_53 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40034 \vga_1/i5_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \vga_1/i1201_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_55 ( output F0 );
  wire   GNDI;

  lut40036 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module cube_gen1_SLICE_56 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40019 \vga_1/i1208_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \cube_gen1/i1207_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x1300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rgb_pad_2__SLICE_60 ( output F0 );
  wire   GNDI;

  lut40038 \rgb_pad[2].vhi_inst ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module controller1_osc ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B \controller1/osc ( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), 
    .TRIM9(GNDI), .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), 
    .TRIM4(GNDI), .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), 
    .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module mypll_1_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \mypll_1/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.DIVR = "0";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module rgb_2_ ( input PADDO, output rgb2 );
  wire   VCCI;

  BB_B_B \rgb_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb2) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module rgb_3_ ( input PADDO, output rgb3 );
  wire   VCCI;

  BB_B_B \rgb_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb3) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_4_ ( input PADDO, output rgb4 );
  wire   VCCI;

  BB_B_B \rgb_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb4) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_5_ ( input PADDO, output rgb5 );
  wire   VCCI;

  BB_B_B \rgb_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb5) = (0:0:0,0:0:0);
  endspecify

endmodule

module VSYNC ( input PADDO, output VSYNC );
  wire   VCCI;

  BB_B_B \VSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module HSYNC ( input PADDO, output HSYNC );
  wire   VCCI;

  BB_B_B \HSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(HSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => HSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_1_ ( input PADDO, output rgb1 );
  wire   VCCI;

  BB_B_B \rgb_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb1) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_0_ ( input PADDO, output rgb0 );
  wire   VCCI;

  BB_B_B \rgb_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb0) = (0:0:0,0:0:0);
  endspecify

endmodule

module controlLatch ( input PADDO, output controlLatch );
  wire   VCCI;

  BB_B_B \controlLatch_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(controlLatch));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => controlLatch) = (0:0:0,0:0:0);
  endspecify

endmodule

module controlClk ( input PADDO, output controlClk );
  wire   VCCI;

  BB_B_B \controlClk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(controlClk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => controlClk) = (0:0:0,0:0:0);
  endspecify

endmodule

module fpga_clk ( output PADDI, input fpga_clk );
  wire   GNDI;

  BB_B_B \fpga_clk_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(fpga_clk));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (fpga_clk => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule
